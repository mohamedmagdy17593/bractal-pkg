import _styled from '@emotion/styled-base';
import React from 'react';
import _ from 'lodash';
import { withTheme } from 'emotion-theming';
import { css, keyframes, jsx } from '@emotion/core';
import { withMedia } from 'react-media-query-hoc-with-context';
import PropTypes from 'prop-types';
import 'react-spinners/PulseLoader';
import Color from 'color';
import changeCase from 'change-case';
import cuid from 'cuid';
import i18next from 'i18next';
import { FaSpinner } from 'react-icons/fa';
import { curry } from 'ramda';
import 'classnames';

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var ForceMediaContext = React.createContext();

const patchTargets = {
  xsmall: ['minXsamll', 'xsmall', 'maxMobile', 'maxTablet', 'maxDesktop', 'maxLargeDesktop'],
  mobile: ['minXsmall', 'minMobile', 'mobile', 'maxMobile', 'maxTablet', 'maxDesktop', 'maxLargeDesktop'],
  tablet: ['minXsmall', 'minMobile', 'minTablet', 'tablet', 'maxTablet', 'maxDesktop', 'maxLargeDesktop'],
  desktop: ['minXsmall', 'minMobile', 'minTablet', 'minDesktop', 'desktop', 'maxDesktop', 'maxLargeDesktop'],
  largeDesktop: ['minXsmall', 'minMobile', 'minTablet', 'minDesktop', 'largeDesktop', 'maxLargeDesktop']
};
var withMedia$1 = (WrappedComponent => withMedia(props => React.createElement(ForceMediaContext.Consumer, null, forceMediaQuery => {
  let patchedMedia = props.media;

  if (forceMediaQuery) {
    patchedMedia = _.mapValues(props.media, (mediaQueryMatched, mediaQueryName) => patchTargets[forceMediaQuery].includes(mediaQueryName));
  }

  return React.createElement(WrappedComponent, _extends({}, props, {
    media: patchedMedia,
    forceMediaQuery: forceMediaQuery
  }), props.children);
})));

function assert(condition, message) {
  if (!condition) {
    const errorMessage = message || 'Assertion failed';

    if (typeof Error !== 'undefined') {
      throw new Error(errorMessage);
    }

    throw errorMessage; // Fallback
  }
}

const generateSequenceFromTo = (from, to) => from < to ? [...Array(to - from).keys()].map(i => i + from) : [...Array(from - to).keys()].map(i => from - i);

const SIZE_PROP_NAMES = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl', 'header'];
const FONT_COLORS = ['primary', 'secondary', 'important', 'normal', 'emphasized', 'subtle', 'hint', 'error'];

const themeProp = propName => propName.replace('s_', '');

const darken = (color, ratio) => ratio >= 0 ? Color(color).darken(ratio).string() : Color(color).lighten(-1 * ratio).string();

const modesColors = (type, theme, props) => {
  const colors = theme.new.colors.buttons[type];
  return {
    normal: {
      lineColor: colors.line,
      borderColor: props.forceInvertedBorder ? colors.line : colors.background,
      backgroundColor: colors.background
    },
    inverted: {
      lineColor: colors.lineInverted,
      borderColor: props.forceInvertedBorder ? colors.backgroundinverted : colors.lineInverted,
      backgroundColor: colors.backgroundinverted
    }
  };
};

const boxModesColors = (type, theme) => ({
  normal: {
    lineColor: theme.new.colors.named.inverted,
    borderColor: theme.new.colors.named.inverted,
    backgroundColor: theme.new.colors.named[type]
  },
  inverted: {
    lineColor: theme.new.colors.named[type],
    borderColor: theme.new.colors.named[type],
    backgroundColor: theme.new.colors.panels.background
  }
});
const infereControlType = props => {
  if (props.disabled) {
    return 'disabled';
  } else if (props.passive) {
    return 'passive';
  } else if (props.secondary) {
    return 'secondary';
  }

  return 'primary';
};
const infereControlMode = props => {
  if (props.inverted) {
    return 'inverted';
  }

  return 'normal';
};

const infereBoxColors = props => {
  if (props.colors) {
    return props.colors;
  }

  if (!props.boxType || !props.theme.new.colors.named[props.boxType]) {
    return {};
  }

  const type = props.boxType;
  const mode = infereControlMode(props);
  return boxModesColors(type, props.theme)[mode];
};

const boxColorsStyles = props =>
/*#__PURE__*/
css("color:", props.color || infereBoxColors(props).lineColor, ";border-color:", props.borderColor || infereBoxColors(props).borderColor, ";background-color:", props.backgroundColor || infereBoxColors(props).backgroundColor, ";label:boxColorsStyles;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
const infereButtonColors = props => {
  const type = infereControlType(props);
  const mode = infereControlMode(props);
  return props.colors || modesColors(type, props.theme, props)[mode];
};

const colors = (inferedColors, darkRatio) => ({
  color: darken(inferedColors.lineColor, darkRatio),
  backgroundColor: darken(inferedColors.backgroundColor, darkRatio),
  borderColor: darken(inferedColors.borderColor, darkRatio)
});

const colorStyles = props => {
  const inferedColors = infereButtonColors(props);
  return [colors(inferedColors, 0), {
    '&:hover': colors(inferedColors, 0.05),
    '&:active': colors(inferedColors, 0.1),
    '&:focus': {
      borderColor: darken(infereButtonColors(props).borderColor, 0.3)
    }
  }]; // css`
  //   ${colors(inferedColors, 0)}
  //   &:hover {
  //     color: ${darken(inferedColors.lineColor, 0.05)};
  //     background-color: ${darken(inferedColors.backgroundColor, 0.05)};
  //     border-color: ${darken(inferedColors.borderColor, 0.05)};
  //   }
  // ` ||
  // css`
  //   ${colors(props, 0)}
  //   &:hover {
  //     ${colors(props, 0.05)}
  //   }
  //   &:active {
  //     ${colors(props, 0.1)}
  //   }
  //   &:focus {
  //     border-color: ${darken(infereButtonColors(props).borderColor, 0.3)};
  //   }
  // `
};
const disabledColorStyles = props =>
/*#__PURE__*/
css(colors(props, 0), "label:disabledColorStyles;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
const getNamedFontSize = size => SIZE_PROP_NAMES.find(sizeProp => size === sizeProp);
const infereSize = props => getNamedFontSize(props.size) || SIZE_PROP_NAMES.find(sizeProp => props[sizeProp]);
const infereSpaceSize = (props, size) => {
  if (_.isNumber(size)) {
    return `${size * props.theme.new.spacer}px`;
  } else if (size && parseFloat(size.toString()) === size) {
    return `${parseFloat(size.toString()) * props.theme.new.spacer}px`;
  }

  return size;
};
const infereFontColor = (props, defaultColor) => {
  let color = null;

  if (props.color) {
    color = FONT_COLORS.find(fontColor => fontColor === props.color);

    if (!color) {
      return props.color;
    }
  }

  color = color || FONT_COLORS.find(fontColor => props[fontColor]) || defaultColor;
  const mode = infereControlMode(props);
  return props.theme.new.colors.labels[mode][color];
};
const infereFontSize = (props, size) => {
  let inferedSize = infereSize(props);
  const receivedSize = size || props.size;

  if (!receivedSize && !inferedSize) {
    inferedSize = 'md';
  }

  if (_.isNumber(receivedSize)) {
    return `${receivedSize * props.theme.new.spacer}px`;
  } else if (receivedSize && parseFloat(receivedSize.toString()) === receivedSize) {
    return `${parseFloat(receivedSize).toString() * props.theme.new.spacer}px`;
  } else if (getNamedFontSize(receivedSize)) {
    return `${props.theme.new.fonts.sizes[themeProp(receivedSize)]}px`;
  } else if (inferedSize) {
    return `${props.theme.new.fonts.sizes[themeProp(inferedSize)]}px`;
  }

  return receivedSize;
};
const infereNamedFontSize = (props, size) => {
  const inferedSize = size || infereSize(props) || 'md';
  return props.theme.new.fonts.sizes[themeProp(inferedSize)] || inferedSize;
};
const infereFontWeight = props => {
  if (props.extraBold) {
    return props.theme.new.fonts.weights.extraBold;
  } else if (props.bold) {
    return props.theme.new.fonts.weights.bold;
  } else if (props.semiBold) {
    return props.theme.new.fonts.weights.semiBold;
  }

  return null; // Normal
};
const infereBorderRadius = (props, size) => {
  if (props.fullRound) {
    return 1000;
  } else if (props.radius) {
    return props.radius;
  }

  const inferedSize = infereNamedFontSize(props, size);
  return inferedSize / 2.5;
};
const inferePaddingSize = (props, size) => {
  const inferedSize = 0.53 * infereNamedFontSize(props, size);
  return props.tight ? inferedSize / 2 : inferedSize;
};
const propsForPrefix = (props, prefix) => _.mapKeys(_.pickBy(props, (propValue, propName) => propName.indexOf(prefix) === 0), (triggerPropValue, triggerPropKey) => triggerPropKey.replace(prefix, ''));

const responsiveJSQueries = media => [media.xsmall, media.minMobile, media.minTablet, media.minDesktop, media.largeDesktop];

const responsiveStyle = (props, targetProp, callBack, defaultValue) => {
  let propValue = null;

  if (targetProp === 'size') {
    if (props.size) {
      propValue = props.size;
    } else {
      propValue = infereSize(props) || 'md';
    }
  } else {
    propValue = props[targetProp];
  }

  if (!propValue) {
    if (defaultValue) {
      return callBack(defaultValue);
    }

    return null;
  }

  if (_.isArray(propValue) && propValue.length >= 2) {
    assert(props.media, "Media isn't found. Make sure to surround with withMedia");
    const currentSizeIndex = generateSequenceFromTo(4, -1).find(i => responsiveJSQueries(props.media)[i] && i < propValue.length);

    if (!currentSizeIndex && currentSizeIndex !== 0) {
      return '';
    }

    return callBack(propValue[currentSizeIndex]);
  }

  return _.isArray(propValue) && propValue.length === 1 ? callBack(propValue[0]) : callBack(propValue);
};
const responsiveFontSizeStyle = props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("font-size:", infereFontSize(props, size), ";label:responsiveFontSizeStyle;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")));

const styleAliases = [['width', 'w'], ['height', 'h'], ['minWidth'], ['minHeight'], ['maxWidth'], ['maxHeight'], ['padding', 'p'], ['paddingTop', 'pt'], ['paddingBottom', 'pb'], ['paddingLeft', 'pl'], ['paddingRight', 'pr'], ['margin', 'm'], ['marginTop', 'mt'], ['marginBottom', 'mb'], ['marginLeft', 'ml'], ['marginRight', 'mr']];

const styleExists = (props, style) => style.some(styleName => props[styleName]);

const getSize = (props, size) => {
  if (_.isNumber(size)) {
    return `${size * props.theme.new.spacer}px`;
  } else if (size && parseFloat(size).toString() === size) {
    return `${parseFloat(size.toString()) * props.theme.new.spacer}px`;
  }

  return size;
};
var spaceStyles = (props =>
/*#__PURE__*/
css(_.flatten(styleAliases.filter(aliasGroup => styleExists(props, aliasGroup)).map(aliasGroup => {
  const styleName = aliasGroup[0];
  return aliasGroup.map(styleAlias => props[styleAlias] && responsiveStyle(props, styleAlias, size =>
  /*#__PURE__*/
  css(changeCase.paramCase(styleName), ":", getSize(props, size), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlU3lzdGVtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlDb0QiLCJmaWxlIjoic3R5bGVTeXN0ZW0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IHJlc3BvbnNpdmVTdHlsZSB9IGZyb20gJ34vY29yZVVJL3V0aWxzL2luZmVyZVN0eWxlJztcbmltcG9ydCBjaGFuZ2VDYXNlIGZyb20gJ2NoYW5nZS1jYXNlJztcblxuY29uc3Qgc3R5bGVBbGlhc2VzID0gW1xuICBbJ3dpZHRoJywgJ3cnXSxcbiAgWydoZWlnaHQnLCAnaCddLFxuICBbJ21pbldpZHRoJ10sXG4gIFsnbWluSGVpZ2h0J10sXG4gIFsnbWF4V2lkdGgnXSxcbiAgWydtYXhIZWlnaHQnXSxcbiAgWydwYWRkaW5nJywgJ3AnXSxcbiAgWydwYWRkaW5nVG9wJywgJ3B0J10sXG4gIFsncGFkZGluZ0JvdHRvbScsICdwYiddLFxuICBbJ3BhZGRpbmdMZWZ0JywgJ3BsJ10sXG4gIFsncGFkZGluZ1JpZ2h0JywgJ3ByJ10sXG4gIFsnbWFyZ2luJywgJ20nXSxcbiAgWydtYXJnaW5Ub3AnLCAnbXQnXSxcbiAgWydtYXJnaW5Cb3R0b20nLCAnbWInXSxcbiAgWydtYXJnaW5MZWZ0JywgJ21sJ10sXG4gIFsnbWFyZ2luUmlnaHQnLCAnbXInXSxcbl07XG5cbmNvbnN0IHN0eWxlRXhpc3RzID0gKHByb3BzLCBzdHlsZSkgPT5cbiAgc3R5bGUuc29tZShzdHlsZU5hbWUgPT4gcHJvcHNbc3R5bGVOYW1lXSk7XG5cbmV4cG9ydCBjb25zdCBnZXRTaXplID0gKHByb3BzLCBzaXplKSA9PiB7XG4gIGlmIChfLmlzTnVtYmVyKHNpemUpKSB7XG4gICAgcmV0dXJuIGAke3NpemUgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4YDtcbiAgfSBlbHNlIGlmIChzaXplICYmIHBhcnNlRmxvYXQoc2l6ZSkudG9TdHJpbmcoKSA9PT0gc2l6ZSkge1xuICAgIHJldHVybiBgJHtwYXJzZUZsb2F0KHNpemUudG9TdHJpbmcoKSkgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4YDtcbiAgfVxuICByZXR1cm4gc2l6ZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHByb3BzID0+IGNzc2BcbiAgJHtfLmZsYXR0ZW4oc3R5bGVBbGlhc2VzLmZpbHRlcihhbGlhc0dyb3VwID0+IHN0eWxlRXhpc3RzKHByb3BzLCBhbGlhc0dyb3VwKSkubWFwKChhbGlhc0dyb3VwKSA9PiB7XG4gICAgY29uc3Qgc3R5bGVOYW1lID0gYWxpYXNHcm91cFswXTtcbiAgICByZXR1cm4gYWxpYXNHcm91cC5tYXAoc3R5bGVBbGlhcyA9PiBwcm9wc1tzdHlsZUFsaWFzXSAmJlxuICAgICAgcmVzcG9uc2l2ZVN0eWxlKHByb3BzLCBzdHlsZUFsaWFzLCBzaXplID0+IGNzc2BcbiAgICAgICAgJHtjaGFuZ2VDYXNlLnBhcmFtQ2FzZShzdHlsZU5hbWUpfTogJHtnZXRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgKSk7XG4gIH0pKX07XG4gIGA7XG4iXX0= */"))));
})), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlU3lzdGVtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFDMkIiLCJmaWxlIjoic3R5bGVTeXN0ZW0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IHJlc3BvbnNpdmVTdHlsZSB9IGZyb20gJ34vY29yZVVJL3V0aWxzL2luZmVyZVN0eWxlJztcbmltcG9ydCBjaGFuZ2VDYXNlIGZyb20gJ2NoYW5nZS1jYXNlJztcblxuY29uc3Qgc3R5bGVBbGlhc2VzID0gW1xuICBbJ3dpZHRoJywgJ3cnXSxcbiAgWydoZWlnaHQnLCAnaCddLFxuICBbJ21pbldpZHRoJ10sXG4gIFsnbWluSGVpZ2h0J10sXG4gIFsnbWF4V2lkdGgnXSxcbiAgWydtYXhIZWlnaHQnXSxcbiAgWydwYWRkaW5nJywgJ3AnXSxcbiAgWydwYWRkaW5nVG9wJywgJ3B0J10sXG4gIFsncGFkZGluZ0JvdHRvbScsICdwYiddLFxuICBbJ3BhZGRpbmdMZWZ0JywgJ3BsJ10sXG4gIFsncGFkZGluZ1JpZ2h0JywgJ3ByJ10sXG4gIFsnbWFyZ2luJywgJ20nXSxcbiAgWydtYXJnaW5Ub3AnLCAnbXQnXSxcbiAgWydtYXJnaW5Cb3R0b20nLCAnbWInXSxcbiAgWydtYXJnaW5MZWZ0JywgJ21sJ10sXG4gIFsnbWFyZ2luUmlnaHQnLCAnbXInXSxcbl07XG5cbmNvbnN0IHN0eWxlRXhpc3RzID0gKHByb3BzLCBzdHlsZSkgPT5cbiAgc3R5bGUuc29tZShzdHlsZU5hbWUgPT4gcHJvcHNbc3R5bGVOYW1lXSk7XG5cbmV4cG9ydCBjb25zdCBnZXRTaXplID0gKHByb3BzLCBzaXplKSA9PiB7XG4gIGlmIChfLmlzTnVtYmVyKHNpemUpKSB7XG4gICAgcmV0dXJuIGAke3NpemUgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4YDtcbiAgfSBlbHNlIGlmIChzaXplICYmIHBhcnNlRmxvYXQoc2l6ZSkudG9TdHJpbmcoKSA9PT0gc2l6ZSkge1xuICAgIHJldHVybiBgJHtwYXJzZUZsb2F0KHNpemUudG9TdHJpbmcoKSkgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4YDtcbiAgfVxuICByZXR1cm4gc2l6ZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHByb3BzID0+IGNzc2BcbiAgJHtfLmZsYXR0ZW4oc3R5bGVBbGlhc2VzLmZpbHRlcihhbGlhc0dyb3VwID0+IHN0eWxlRXhpc3RzKHByb3BzLCBhbGlhc0dyb3VwKSkubWFwKChhbGlhc0dyb3VwKSA9PiB7XG4gICAgY29uc3Qgc3R5bGVOYW1lID0gYWxpYXNHcm91cFswXTtcbiAgICByZXR1cm4gYWxpYXNHcm91cC5tYXAoc3R5bGVBbGlhcyA9PiBwcm9wc1tzdHlsZUFsaWFzXSAmJlxuICAgICAgcmVzcG9uc2l2ZVN0eWxlKHByb3BzLCBzdHlsZUFsaWFzLCBzaXplID0+IGNzc2BcbiAgICAgICAgJHtjaGFuZ2VDYXNlLnBhcmFtQ2FzZShzdHlsZU5hbWUpfTogJHtnZXRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgKSk7XG4gIH0pKX07XG4gIGA7XG4iXX0= */")));

/* eslint-disable jsx-a11y/no-noninteractive-element-interactions,
 jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */

const Icon = props => React.createElement("i", _extends({
  className: props.className
}, props, {
  onClick: props.onClick
}));

Icon.propTypes = PropTypes.shape({
  className: PropTypes.string.isRequired
}).isRequired;

/* eslint-disable function-paren-newline */

const generateMissingKeys = element => element.props.key ? element : React.cloneElement(element, {
  key: cuid()
});

var injectElementBetweenChildElements = ((items, separator, generateKeysIfNeeded) => {
  if (!separator) {
    return items;
  }

  if (!items) {
    return [];
  } else if (items.length === 0 || !_.isArray(items)) {
    return [items];
  }

  let elementItems = items.filter(element => _.isArray(element) && element.length > 0 || React.isValidElement(element) || _.isString(element) && element.trim().length > 0);
  elementItems = _.flatten(elementItems);

  const keyedSeparator = () => generateKeysIfNeeded ? generateMissingKeys(separator) : separator;

  const itemsWithExtraSeparator = [..._.flatten(elementItems.map(item => item ? [item, keyedSeparator()] : null))];
  return itemsWithExtraSeparator.slice(0, itemsWithExtraSeparator.length - 1);
});

const StyledSpacer = _styled("div", {
  target: "e56c2770",
  label: "StyledSpacer"
})("flex-grow:", props => props.grow ? 1 : null, ";", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("min-width:", infereSpaceSize(props, size), ";min-height:", infereSpaceSize(props, size), ";label:StyledSpacer;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNwYWNlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV3VEIiwiZmlsZSI6IlNwYWNlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgcmVzcG9uc2l2ZVN0eWxlLCBpbmZlcmVTcGFjZVNpemUgfSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSc7XG5cbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSc7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTcGFjZXIgPSBzdHlsZWQuZGl2YFxuICBmbGV4LWdyb3c6ICR7cHJvcHMgPT4gKHByb3BzLmdyb3cgPyAxIDogbnVsbCl9O1xuICBcbiAgJHtwcm9wcyA9PiByZXNwb25zaXZlU3R5bGUocHJvcHMsICdzaXplJywgc2l6ZSA9PiBjc3NgXG4gICAgbWluLXdpZHRoOiAke2luZmVyZVNwYWNlU2l6ZShwcm9wcywgc2l6ZSl9O1xuICAgIG1pbi1oZWlnaHQ6ICR7aW5mZXJlU3BhY2VTaXplKHByb3BzLCBzaXplKX07XG4gIGApfTtcblxuICAke3Byb3BzID0+IHNwYWNlU3R5bGVzKHByb3BzKX1cbmA7XG5cbmNvbnN0IFNwYWNlciA9IHByb3BzID0+IDxTdHlsZWRTcGFjZXIgey4uLnByb3BzfSAvPjtcblxuU3BhY2VyLmRlZmF1bHRQcm9wcyA9IHtcbiAgc2l6ZTogMSxcbn07XG5cblNwYWNlci5wcm9wVHlwZXMgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxufSkuaXNSZXF1aXJlZDtcblxuZXhwb3J0IGRlZmF1bHQgU3BhY2VyO1xuXG5leHBvcnQgY29uc3QgSFNwYWNlciA9IHByb3BzID0+IChcbiAgPFNwYWNlciBtaW5IZWlnaHQ9XCIxcHhcIiB7Li4ucHJvcHN9IC8+XG4pO1xuXG5leHBvcnQgY29uc3QgVlNwYWNlciA9IHByb3BzID0+IChcbiAgPFNwYWNlciBtaW5XaWR0aD1cIjFweFwiIHsuLi5wcm9wc30gLz5cbik7XG4iXX0= */"))), ";", props => spaceStyles(props), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNwYWNlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUXNDIiwiZmlsZSI6IlNwYWNlci5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgcmVzcG9uc2l2ZVN0eWxlLCBpbmZlcmVTcGFjZVNpemUgfSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSc7XG5cbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSc7XG5cbmV4cG9ydCBjb25zdCBTdHlsZWRTcGFjZXIgPSBzdHlsZWQuZGl2YFxuICBmbGV4LWdyb3c6ICR7cHJvcHMgPT4gKHByb3BzLmdyb3cgPyAxIDogbnVsbCl9O1xuICBcbiAgJHtwcm9wcyA9PiByZXNwb25zaXZlU3R5bGUocHJvcHMsICdzaXplJywgc2l6ZSA9PiBjc3NgXG4gICAgbWluLXdpZHRoOiAke2luZmVyZVNwYWNlU2l6ZShwcm9wcywgc2l6ZSl9O1xuICAgIG1pbi1oZWlnaHQ6ICR7aW5mZXJlU3BhY2VTaXplKHByb3BzLCBzaXplKX07XG4gIGApfTtcblxuICAke3Byb3BzID0+IHNwYWNlU3R5bGVzKHByb3BzKX1cbmA7XG5cbmNvbnN0IFNwYWNlciA9IHByb3BzID0+IDxTdHlsZWRTcGFjZXIgey4uLnByb3BzfSAvPjtcblxuU3BhY2VyLmRlZmF1bHRQcm9wcyA9IHtcbiAgc2l6ZTogMSxcbn07XG5cblNwYWNlci5wcm9wVHlwZXMgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICBzaXplOiBQcm9wVHlwZXMubnVtYmVyLFxufSkuaXNSZXF1aXJlZDtcblxuZXhwb3J0IGRlZmF1bHQgU3BhY2VyO1xuXG5leHBvcnQgY29uc3QgSFNwYWNlciA9IHByb3BzID0+IChcbiAgPFNwYWNlciBtaW5IZWlnaHQ9XCIxcHhcIiB7Li4ucHJvcHN9IC8+XG4pO1xuXG5leHBvcnQgY29uc3QgVlNwYWNlciA9IHByb3BzID0+IChcbiAgPFNwYWNlciBtaW5XaWR0aD1cIjFweFwiIHsuLi5wcm9wc30gLz5cbik7XG4iXX0= */");

const Spacer = props => React.createElement(StyledSpacer, props);

Spacer.defaultProps = {
  size: 1
};
Spacer.propTypes = PropTypes.shape({
  size: PropTypes.number
}).isRequired;

const getIntraItemsSpacer = props => {
  let sizeProp = null; // eslint-disable-next-line react/prop-types

  sizeProp = props.spaceBetween ? parseFloat(props.spaceBetween) : null;

  if (!sizeProp) {
    return null;
  }

  return React.createElement(Spacer, {
    size: sizeProp
  });
};

const getBorderColor = props => {
  let color = 'light';

  if (props.borderColor) {
    color = props.borderColor;
  }

  return props.theme.borders.color[color] || props.borderColor;
};

const getBorderWeight = props => {
  let weight = 'thin';

  if (props.borderWeight) {
    weight = props.borderWeight;
  }

  return props.theme.borders.size[weight];
};

const getBorderRadius = props => {
  let radius = 'normal';

  if (props.borderRadius) {
    radius = props.borderRadius;
  }

  return props.theme.borders.radius[radius] || radius;
};

const getJustifyContent = props => {
  if (props.spaceEvenlyJustified) {
    return 'space-evenly';
  } else if (props.spaceAroundJustified) {
    return 'space-around';
  } else if (props.spaceBetweenJustified) {
    return 'space-between';
  } else if (props.stretchJustified) {
    return 'stretch';
  } else if (props.topJustified) {
    return 'flex-start';
  } else if (props.centerJustified) {
    return 'center';
  } else if (props.bottomJustified) {
    return 'flex-end';
  } else if (props.leftJustified) {
    return 'flex-start';
  } else if (props.rightJustified) {
    return 'flex-end';
  }

  return null;
};

const getAlignItems = props => {
  if (props.stretchAligned) {
    return 'stretch';
  } else if (props.centerAligned) {
    return 'center';
  } else if (props.topAligned) {
    return 'flex-start';
  } else if (props.bottomAligned) {
    return 'flex-end';
  } else if (props.leftAligned) {
    return 'flex-start';
  } else if (props.rightAligned) {
    return 'flex-end';
  }

  return null;
};

const StyledLinearLayout = withMedia$1(_styled("div", {
  target: "e16gqywk0",
  label: "StyledLinearLayout"
})("width:", props => props.fullWidth ? '100%' : props.width, ";height:", props => props.fullHeight ? '100%' : props.height, ";box-sizing:border-box;display:flex;flex-direction:", props => props.row ? 'row' : 'column', ";flex-grow:", props => props.grow ? 1 : null, ";justify-content:", props => getJustifyContent(props) || 'flex-start', ";align-items:", props => getAlignItems(props) || 'center', ";border:", props => props.bordered && `solid ${getBorderWeight(props)}px ${getBorderColor(props)}`, ";border-radius:", props => getBorderRadius(props), "px;border-top:", props => props.topBordered && `solid ${getBorderWeight(props)}px ${getBorderColor(props)}`, ";border-left:", props => props.leftBordered && `solid ${getBorderWeight(props)}px ${getBorderColor(props)}`, ";border-bottom:", props => props.bottomBordered && `solid ${getBorderWeight(props)}px ${getBorderColor(props)}`, ";border-right:", props => props.rightBordered && `solid ${getBorderWeight(props)}px ${getBorderColor(props)}`, ";padding:", props => props.padding * props.theme.new.spacer, "px;padding-left:", props => props.paddingLeft * props.theme.new.spacer, "px;padding-right:", props => props.paddingRight * props.theme.new.spacer, "px;padding-top:", props => props.paddingTop * props.theme.new.spacer, "px;padding-bottom:", props => props.paddingBottom * props.theme.new.spacer, "px;", props => spaceStyles(props), " ", props => boxColorsStyles(props), " ", props => props.customStyles && props.customStyles(props), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmVhckxheW91dC5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0YrQyIsImZpbGUiOiJMaW5lYXJMYXlvdXQuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBpbmplY3RFbGVtZW50QmV0d2VlbkNoaWxkRWxlbWVudHMgZnJvbSAnfi9jb3JlL3V0aWxzL2pzSGVscGVycy9pbmplY3RFbGVtZW50QmV0d2VlbkNoaWxkRWxlbWVudHMnO1xuaW1wb3J0IHsgYm94Q29sb3JzU3R5bGVzIH0gZnJvbSAnfi9jb3JlVUkvdXRpbHMvaW5mZXJlU3R5bGUnO1xuaW1wb3J0IHNwYWNlU3R5bGVzIGZyb20gJ34vY29yZVVJL3V0aWxzL3N0eWxlU3lzdGVtJztcbmltcG9ydCB3aXRoTWVkaWEgZnJvbSAnfi9jb3JlL3V0aWxzL21lZGlhSGVscGVycy93aXRoTWVkaWEnO1xuXG5pbXBvcnQgU3BhY2VyIGZyb20gJy4vU3BhY2VyJztcblxuY29uc3QgZ2V0SW50cmFJdGVtc1NwYWNlciA9IChwcm9wcykgPT4ge1xuICBsZXQgc2l6ZVByb3AgPSBudWxsO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICBzaXplUHJvcCA9IHByb3BzLnNwYWNlQmV0d2VlbiA/IHBhcnNlRmxvYXQocHJvcHMuc3BhY2VCZXR3ZWVuKSA6IG51bGw7XG4gIGlmICghc2l6ZVByb3ApIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gPFNwYWNlciBzaXplPXtzaXplUHJvcH0gLz47XG59O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChwcm9wcykgPT4ge1xuICBsZXQgY29sb3IgPSAnbGlnaHQnO1xuICBpZiAocHJvcHMuYm9yZGVyQ29sb3IpIHtcbiAgICBjb2xvciA9IHByb3BzLmJvcmRlckNvbG9yO1xuICB9XG5cbiAgcmV0dXJuIHByb3BzLnRoZW1lLmJvcmRlcnMuY29sb3JbY29sb3JdIHx8IHByb3BzLmJvcmRlckNvbG9yO1xufTtcblxuY29uc3QgZ2V0Qm9yZGVyV2VpZ2h0ID0gKHByb3BzKSA9PiB7XG4gIGxldCB3ZWlnaHQgPSAndGhpbic7XG4gIGlmIChwcm9wcy5ib3JkZXJXZWlnaHQpIHtcbiAgICB3ZWlnaHQgPSBwcm9wcy5ib3JkZXJXZWlnaHQ7XG4gIH1cblxuICByZXR1cm4gcHJvcHMudGhlbWUuYm9yZGVycy5zaXplW3dlaWdodF07XG59O1xuXG5jb25zdCBnZXRCb3JkZXJSYWRpdXMgPSAocHJvcHMpID0+IHtcbiAgbGV0IHJhZGl1cyA9ICdub3JtYWwnO1xuICBpZiAocHJvcHMuYm9yZGVyUmFkaXVzKSB7XG4gICAgcmFkaXVzID0gcHJvcHMuYm9yZGVyUmFkaXVzO1xuICB9XG5cbiAgcmV0dXJuIHByb3BzLnRoZW1lLmJvcmRlcnMucmFkaXVzW3JhZGl1c10gfHwgcmFkaXVzO1xufTtcblxuY29uc3QgZ2V0SnVzdGlmeUNvbnRlbnQgPSAocHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLnNwYWNlRXZlbmx5SnVzdGlmaWVkKSB7XG4gICAgcmV0dXJuICdzcGFjZS1ldmVubHknO1xuICB9IGVsc2UgaWYgKHByb3BzLnNwYWNlQXJvdW5kSnVzdGlmaWVkKSB7XG4gICAgcmV0dXJuICdzcGFjZS1hcm91bmQnO1xuICB9IGVsc2UgaWYgKHByb3BzLnNwYWNlQmV0d2Vlbkp1c3RpZmllZCkge1xuICAgIHJldHVybiAnc3BhY2UtYmV0d2Vlbic7XG4gIH0gZWxzZSBpZiAocHJvcHMuc3RyZXRjaEp1c3RpZmllZCkge1xuICAgIHJldHVybiAnc3RyZXRjaCc7XG4gIH0gZWxzZSBpZiAocHJvcHMudG9wSnVzdGlmaWVkKSB7XG4gICAgcmV0dXJuICdmbGV4LXN0YXJ0JztcbiAgfSBlbHNlIGlmIChwcm9wcy5jZW50ZXJKdXN0aWZpZWQpIHtcbiAgICByZXR1cm4gJ2NlbnRlcic7XG4gIH0gZWxzZSBpZiAocHJvcHMuYm90dG9tSnVzdGlmaWVkKSB7XG4gICAgcmV0dXJuICdmbGV4LWVuZCc7XG4gIH0gZWxzZSBpZiAocHJvcHMubGVmdEp1c3RpZmllZCkge1xuICAgIHJldHVybiAnZmxleC1zdGFydCc7XG4gIH0gZWxzZSBpZiAocHJvcHMucmlnaHRKdXN0aWZpZWQpIHtcbiAgICByZXR1cm4gJ2ZsZXgtZW5kJztcbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbmNvbnN0IGdldEFsaWduSXRlbXMgPSAocHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLnN0cmV0Y2hBbGlnbmVkKSB7XG4gICAgcmV0dXJuICdzdHJldGNoJztcbiAgfSBlbHNlIGlmIChwcm9wcy5jZW50ZXJBbGlnbmVkKSB7XG4gICAgcmV0dXJuICdjZW50ZXInO1xuICB9IGVsc2UgaWYgKHByb3BzLnRvcEFsaWduZWQpIHtcbiAgICByZXR1cm4gJ2ZsZXgtc3RhcnQnO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvdHRvbUFsaWduZWQpIHtcbiAgICByZXR1cm4gJ2ZsZXgtZW5kJztcbiAgfSBlbHNlIGlmIChwcm9wcy5sZWZ0QWxpZ25lZCkge1xuICAgIHJldHVybiAnZmxleC1zdGFydCc7XG4gIH0gZWxzZSBpZiAocHJvcHMucmlnaHRBbGlnbmVkKSB7XG4gICAgcmV0dXJuICdmbGV4LWVuZCc7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xuXG5jb25zdCBTdHlsZWRMaW5lYXJMYXlvdXQgPSB3aXRoTWVkaWEoc3R5bGVkLmRpdmBcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmZ1bGxXaWR0aCA/ICcxMDAlJyA6IHByb3BzLndpZHRoKX07XG4gIGhlaWdodDogJHtwcm9wcyA9PiAocHJvcHMuZnVsbEhlaWdodCA/ICcxMDAlJyA6IHByb3BzLmhlaWdodCl9O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiAke3Byb3BzID0+IChwcm9wcy5yb3cgPyAncm93JyA6ICdjb2x1bW4nKX07XG4gIGZsZXgtZ3JvdzogJHtwcm9wcyA9PiAocHJvcHMuZ3JvdyA/IDEgOiBudWxsKX07XG4gIGp1c3RpZnktY29udGVudDogJHtwcm9wcyA9PiBnZXRKdXN0aWZ5Q29udGVudChwcm9wcykgfHwgJ2ZsZXgtc3RhcnQnfTtcbiAgYWxpZ24taXRlbXM6ICR7cHJvcHMgPT4gZ2V0QWxpZ25JdGVtcyhwcm9wcykgfHwgJ2NlbnRlcid9O1xuXG4gIGJvcmRlcjogJHtwcm9wcyA9PiBwcm9wcy5ib3JkZXJlZCAmJiBgc29saWQgJHtnZXRCb3JkZXJXZWlnaHQocHJvcHMpfXB4ICR7Z2V0Qm9yZGVyQ29sb3IocHJvcHMpfWB9O1xuICBib3JkZXItcmFkaXVzOiAke3Byb3BzID0+IGdldEJvcmRlclJhZGl1cyhwcm9wcyl9cHg7XG4gIGJvcmRlci10b3A6ICR7cHJvcHMgPT4gcHJvcHMudG9wQm9yZGVyZWQgJiYgYHNvbGlkICR7Z2V0Qm9yZGVyV2VpZ2h0KHByb3BzKX1weCAke2dldEJvcmRlckNvbG9yKHByb3BzKX1gfTtcbiAgYm9yZGVyLWxlZnQ6ICR7cHJvcHMgPT4gcHJvcHMubGVmdEJvcmRlcmVkICYmIGBzb2xpZCAke2dldEJvcmRlcldlaWdodChwcm9wcyl9cHggJHtnZXRCb3JkZXJDb2xvcihwcm9wcyl9YH07XG4gIGJvcmRlci1ib3R0b206ICR7cHJvcHMgPT4gcHJvcHMuYm90dG9tQm9yZGVyZWQgJiYgYHNvbGlkICR7Z2V0Qm9yZGVyV2VpZ2h0KHByb3BzKX1weCAke2dldEJvcmRlckNvbG9yKHByb3BzKX1gfTtcbiAgYm9yZGVyLXJpZ2h0OiAke3Byb3BzID0+IHByb3BzLnJpZ2h0Qm9yZGVyZWQgJiYgYHNvbGlkICR7Z2V0Qm9yZGVyV2VpZ2h0KHByb3BzKX1weCAke2dldEJvcmRlckNvbG9yKHByb3BzKX1gfTtcblxuICBwYWRkaW5nOiAke3Byb3BzID0+IHByb3BzLnBhZGRpbmcgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4O1xuICBwYWRkaW5nLWxlZnQ6ICR7cHJvcHMgPT4gcHJvcHMucGFkZGluZ0xlZnQgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4O1xuICBwYWRkaW5nLXJpZ2h0OiAke3Byb3BzID0+IHByb3BzLnBhZGRpbmdSaWdodCAqIHByb3BzLnRoZW1lLm5ldy5zcGFjZXJ9cHg7XG4gIHBhZGRpbmctdG9wOiAke3Byb3BzID0+IHByb3BzLnBhZGRpbmdUb3AgKiBwcm9wcy50aGVtZS5uZXcuc3BhY2VyfXB4O1xuICBwYWRkaW5nLWJvdHRvbTogJHtwcm9wcyA9PiBwcm9wcy5wYWRkaW5nQm90dG9tICogcHJvcHMudGhlbWUubmV3LnNwYWNlcn1weDtcblxuICAke3Byb3BzID0+IHNwYWNlU3R5bGVzKHByb3BzKX1cbiAgJHtwcm9wcyA9PiBib3hDb2xvcnNTdHlsZXMocHJvcHMpfVxuICAke3Byb3BzID0+IHByb3BzLmN1c3RvbVN0eWxlcyAmJiBwcm9wcy5jdXN0b21TdHlsZXMocHJvcHMpfVxuYCk7XG5cbmV4cG9ydCBjb25zdCBMaW5lYXJMYXlvdXQgPSBwcm9wcyA9PiAoXG4gIDxTdHlsZWRMaW5lYXJMYXlvdXQgey4uLnByb3BzfT5cbiAgICB7aW5qZWN0RWxlbWVudEJldHdlZW5DaGlsZEVsZW1lbnRzKFxuICAgICAgcHJvcHMuY2hpbGRyZW4sIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVhY3QvcHJvcC10eXBlc1xuICAgICAgZ2V0SW50cmFJdGVtc1NwYWNlcihwcm9wcyksXG4gICAgICB0cnVlLFxuICAgICl9XG4gIDwvU3R5bGVkTGluZWFyTGF5b3V0PlxuKTtcblxuZXhwb3J0IGNvbnN0IENvbHVtbiA9IHByb3BzID0+IChcbiAgPExpbmVhckxheW91dCBjb2x1bW4gey4uLnByb3BzfSAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IFJvdyA9IHByb3BzID0+IChcbiAgPExpbmVhckxheW91dCByb3cgey4uLnByb3BzfSAvPlxuKTtcblxuZXhwb3J0IGNvbnN0IEJveCA9IHByb3BzID0+IChcbiAgPExpbmVhckxheW91dCB7Li4ucHJvcHN9IC8+XG4pO1xuIl19 */"));
const LinearLayout = props => React.createElement(StyledLinearLayout, props, injectElementBetweenChildElements(props.children, // eslint-disable-line react/prop-types
getIntraItemsSpacer(props), true));
const Column = props => React.createElement(LinearLayout, _extends({
  column: true
}, props));
const Row = props => React.createElement(LinearLayout, _extends({
  row: true
}, props));
const Box = props => React.createElement(LinearLayout, props);

const StyledButton = _styled("button", {
  target: "e10v47bt0",
  label: "StyledButton"
})("display:flex;justify-content:center;width:100%;position:relative;", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("padding-top:", inferePaddingSize(props, size), "px;padding-bottom:", inferePaddingSize(props, size), "px;padding-left:", (props.pxRatio || 2) * inferePaddingSize(props, size), "px;padding-right:", (props.pxRatio || 2) * inferePaddingSize(props, size), "px;label:StyledButton;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUNpQiIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"))), ";", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("font-size:", infereFontSize(props, size), ";label:StyledButton;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdURpQiIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"))), ";font-weight:", props => infereFontWeight(props), ";border:", props => props.borderLess ? 0 : props.theme.buttons.border || 1, "px solid;", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("border-radius:", infereBorderRadius(props, size), "px;label:StyledButton;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUVpQiIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"))), ";outline-style:none;cursor:pointer;", props => spaceStyles(props), " ", disabledColorStyles, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JrQyIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */");

const LoaderContainer = _styled("div", {
  target: "e10v47bt1",
  label: "LoaderContainer"
})("position:absolute;bottom:0;top:0;left:0;right:0;background:rgba(0,0,0,0.2);", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("border-radius:", infereBorderRadius(props, size), "px;label:LoaderContainer;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUdpQiIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"))), ";& .buttonLoader > *{background-color:", props => darken(props.color || infereButtonColors(props).lineColor, 0), ";}& .buttonLoader{position:absolute;line-height:14px;height:11px;", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("bottom:", inferePaddingSize(props, size) / 2, "px;label:LoaderContainer;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUhtQiIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"))), ";opacity:0.6;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUZrQyIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"));

const ButtonContainer =
/*#__PURE__*/
_styled(Box, {
  target: "e10v47bt2",
  label: "ButtonContainer"
})("position:relative;width:", props => props.block ? '100%' : props.width, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbi5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkhtQyIsImZpbGUiOiJCdXR0b24uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFB1bHNlTG9hZGVyIGZyb20gJ3JlYWN0LXNwaW5uZXJzL1B1bHNlTG9hZGVyJ1xuXG5pbXBvcnQgYXNzZXJ0IGZyb20gJ34vY29yZS91dGlscy9qc0hlbHBlcnMvYXNzZXJ0J1xuXG5pbXBvcnQge1xuICBkYXJrZW4sXG4gIGluZmVyZUJ1dHRvbkNvbG9ycyxcbiAgcmVzcG9uc2l2ZVN0eWxlLFxuICBpbmZlcmVJbnRyYVNwYWNpbmdTaXplLFxuICBpbmZlcmVGb250V2VpZ2h0LFxuICBwcm9wc0ZvclByZWZpeCxcbiAgaW5mZXJlRm9udFNpemUsXG4gIGluZmVyZVBhZGRpbmdTaXplLFxuICBpbmZlcmVCb3JkZXJSYWRpdXMsXG4gIGNvbG9yU3R5bGVzLFxuICBkaXNhYmxlZENvbG9yU3R5bGVzLFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSdcblxuaW1wb3J0IEljb24gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9iYXNpYy9JY29uJ1xuaW1wb3J0IHtSb3csIEJveH0gZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvTGluZWFyTGF5b3V0J1xuXG4vLyBNdXN0IGJlIG9mIHJlbGF0aXZlIHBvc2l0aW9uIGZvciB0aGUgbG9hZGluZyBpY29uIHRvIGJlIGRyYXduIGNvcnJlY3RseVxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJHtwcm9wcyA9PlxuICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgIHByb3BzLFxuICAgICAgJ3NpemUnLFxuICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgIHBhZGRpbmctdG9wOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206ICR7aW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICR7KHByb3BzLnB4UmF0aW8gfHwgMikgKlxuICAgICAgICAgIGluZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKX1weDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJHsocHJvcHMucHhSYXRpbyB8fCAyKSAqXG4gICAgICAgICAgaW5mZXJlUGFkZGluZ1NpemUocHJvcHMsIHNpemUpfXB4O1xuICAgICAgYCxcbiAgICApfTtcblxuICAke3Byb3BzID0+XG4gICAgcmVzcG9uc2l2ZVN0eWxlKFxuICAgICAgcHJvcHMsXG4gICAgICAnc2l6ZScsXG4gICAgICBzaXplID0+IGNzc2BcbiAgICAgICAgZm9udC1zaXplOiAke2luZmVyZUZvbnRTaXplKHByb3BzLCBzaXplKX07XG4gICAgICBgLFxuICAgICl9O1xuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgYm9yZGVyOiAke3Byb3BzID0+IChwcm9wcy5ib3JkZXJMZXNzID8gMCA6IHByb3BzLnRoZW1lLmJ1dHRvbnMuYm9yZGVyIHx8IDEpfXB4XG4gICAgc29saWQ7XG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG5cbiAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICR7cHJvcHMgPT4gc3BhY2VTdHlsZXMocHJvcHMpfVxuICAke2Rpc2FibGVkQ29sb3JTdHlsZXN9XG4gIC8qICR7Y3NzYFxuICAgIGNvbG9yOiByZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICBgfSAqL1xuYFxuXG5jb25zdCBMb2FkZXJDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpO1xuXG4gICR7cHJvcHMgPT5cbiAgICByZXNwb25zaXZlU3R5bGUoXG4gICAgICBwcm9wcyxcbiAgICAgICdzaXplJyxcbiAgICAgIHNpemUgPT4gY3NzYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAke2luZmVyZUJvcmRlclJhZGl1cyhwcm9wcywgc2l6ZSl9cHg7XG4gICAgICBgLFxuICAgICl9O1xuXG4gICYgLmJ1dHRvbkxvYWRlciA+ICoge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cbiAgICAgIGRhcmtlbihwcm9wcy5jb2xvciB8fCBpbmZlcmVCdXR0b25Db2xvcnMocHJvcHMpLmxpbmVDb2xvciwgMCl9O1xuICB9XG5cbiAgJiAuYnV0dG9uTG9hZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgaGVpZ2h0OiAxMXB4O1xuICAgICR7cHJvcHMgPT5cbiAgICAgIHJlc3BvbnNpdmVTdHlsZShcbiAgICAgICAgcHJvcHMsXG4gICAgICAgICdzaXplJyxcbiAgICAgICAgc2l6ZSA9PiBjc3NgXG4gICAgICAgICAgYm90dG9tOiAke2luZmVyZVBhZGRpbmdTaXplKHByb3BzLCBzaXplKSAvIDJ9cHg7XG4gICAgICAgIGAsXG4gICAgICApfTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gIH1cbmBcblxuY29uc3QgQnV0dG9uQ29udGFpbmVyID0gc3R5bGVkKEJveClgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6ICR7cHJvcHMgPT4gKHByb3BzLmJsb2NrID8gJzEwMCUnIDogcHJvcHMud2lkdGgpfTtcbmBcblxuY2xhc3MgSW5uZXJCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb21wb25lbnREaWRNb3VudCA9ICgpID0+IHtcbiAgICAvLyBGSVhNRSA6IFRoZSByZWFzb24gZm9yIHRoZSBmb2xsb3dpbmcgd29yayBhcm91bmQsIGlzIHRoYXQgb25DbGljayB3b3VsZCBiZSBjYWxsZWQgb24gdGhlXG4gICAgLy8gICAgICAgICBFeHRlcm5hbCBjb21wb25lbnQgZmlyc3QsIGFuZCB0aHVzIGNhdXNlcyB0aGUgb25DbGljayBiZWluZyBjYWxsZWQgdHdpY2VcbiAgICAvLyBhc3NlcnQoXG4gICAgLy8gICAhdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgIC8vICAgXCJvbkNsaWNrIHNob3VsZG4ndCBiZSB1c2VkIG9uIEJhc2ljQnV0dG9uLCB1c2Ugb25DbGlja2VkIGluc3RlYWRcIixcbiAgICAvLyApXG4gIH1cblxuICBvbkNsaWNrID0gZSA9PiB7XG4gICAgaWYgKHRoaXMucHJvcHMub25DbGlja2VkKSB7XG4gICAgICB0aGlzLnByb3BzLm9uQ2xpY2tlZChlKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciA9ICgpID0+IChcbiAgICA8U3R5bGVkQnV0dG9uXG4gICAgICB7Li4uXy5vbWl0KHRoaXMucHJvcHMsIFsnb25DbGlja2VkJ10pfVxuICAgICAgb25DbGljaz17ZSA9PiB0aGlzLm9uQ2xpY2soZSl9XG4gICAgPlxuICAgICAge3RoaXMucHJvcHMuY2hpbGRyZW59XG4gICAgPC9TdHlsZWRCdXR0b24+XG4gIClcbn1cblxuSW5uZXJCdXR0b24ucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbn0pLmlzUmVxdWlyZWRcblxuY29uc3QgQnV0dG9uID0gcHJvcHMgPT4gPElubmVyQnV0dG9uIHsuLi5wcm9wc30gLz5cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */"));

class InnerButton extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "componentDidMount", () => {// FIXME : The reason for the following work around, is that onClick would be called on the
      //         External component first, and thus causes the onClick being called twice
      // assert(
      //   !this.props.onClick,
      //   "onClick shouldn't be used on BasicButton, use onClicked instead",
      // )
    });

    _defineProperty(this, "onClick", e => {
      if (this.props.onClicked) {
        this.props.onClicked(e);
      }
    });

    _defineProperty(this, "render", () => React.createElement(StyledButton, _extends({}, _.omit(this.props, ['onClicked']), {
      onClick: e => this.onClick(e)
    }), this.props.children));
  }

}

InnerButton.propTypes = PropTypes.shape({
  iconName: PropTypes.string.isRequired
}).isRequired;

const Button = props => React.createElement(InnerButton, props);

var ForceDirectionContext = React.createContext();

var withDirection = (WrappedComponent => {
  var _temp;

  return _temp = class InnerDirectionDetector extends React.Component {
    constructor(...args) {
      super(...args);

      _defineProperty(this, "componentDidMount", () => {
        if (i18next) {
          i18next.on('languageChanged loaded', this.onI18nChanged);
        }
      });

      _defineProperty(this, "componentWillUnmount", () => {
        if (i18next) {
          i18next.off('languageChanged loaded', this.onI18nChanged);
        }
      });

      _defineProperty(this, "onI18nChanged", () => {// TODO: check why this is commented
        // this.forceUpdate();
      });

      _defineProperty(this, "render", () => React.createElement(ForceDirectionContext.Consumer, null, forcedDirection => {
        let direction = i18next.language === 'ar' ? 'rtl' : 'ltr';

        if (forcedDirection) {
          direction = forcedDirection;
        }

        return React.createElement(WrappedComponent // TODO: to be removed
        , _extends({}, _.omit(this.props, ['i18nOptions', 'defaultNS', 'reportNS', 't']), {
          direction: direction
        }), this.props.children);
      }));
    }

  }, _temp;
});

var _ref = process.env.NODE_ENV === "production" ? {
  name: "1o19p5x-InnerLabel",
  styles: "white-space:nowrap;label:InnerLabel;"
} : {
  name: "1o19p5x-InnerLabel",
  styles: "white-space:nowrap;label:InnerLabel;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxhYmVscy5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUNPIiwiZmlsZSI6IkxhYmVscy5qc3giLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvcHJlZmVyLWRlZmF1bHQtZXhwb3J0LCByZWFjdC9wcm9wLXR5cGVzICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCB7Y3NzfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHt3aXRoVGhlbWV9IGZyb20gJ2Vtb3Rpb24tdGhlbWluZydcbmltcG9ydCB3aXRoTWVkaWEgZnJvbSAnfi9jb3JlL3V0aWxzL21lZGlhSGVscGVycy93aXRoTWVkaWEnXG5pbXBvcnQgd2l0aERpcmVjdGlvbiBmcm9tICd+L2NvcmUvdXRpbHMvbWVkaWFIZWxwZXJzL3dpdGhEaXJlY3Rpb24nXG5cbmltcG9ydCB7XG4gIHJlc3BvbnNpdmVTdHlsZSxcbiAgaW5mZXJlRm9udFNpemUsXG4gIHJlc3BvbnNpdmVGb250U2l6ZVN0eWxlLFxuICBpbmZlcmVGb250Q29sb3IsXG4gIGluZmVyZUZvbnRXZWlnaHQsXG59IGZyb20gJ34vY29yZVVJL3V0aWxzL2luZmVyZVN0eWxlJ1xuXG5jb25zdCBJbm5lckxhYmVsID0gd2l0aERpcmVjdGlvbihzdHlsZWQuc3BhbmBcbiAgdGV4dC10cmFuc2Zvcm06ICR7cHJvcHMgPT4gKHByb3BzLnVwcGVyY2FzZSA/ICd1cHBlcmNhc2UnIDogJ25vbmUnKX07XG5cbiAgY29sb3I6ICR7cHJvcHMgPT4gaW5mZXJlRm9udENvbG9yKHByb3BzLCAnbm9ybWFsJyl9O1xuXG4gIGZvbnQtd2VpZ2h0OiAke3Byb3BzID0+IGluZmVyZUZvbnRXZWlnaHQocHJvcHMpfTtcblxuICBsaW5lLWhlaWdodDogMS4xZW07XG5cbiAgdGV4dC1hbGlnbjogJHtwcm9wcyA9PlxuICAgIHByb3BzLmFsaWduIHx8IChwcm9wcy5kaXJlY3Rpb24gPT09ICdydGwnID8gJ3JpZ2h0JyA6ICdsZWZ0Jyl9O1xuXG4gIGEge1xuICAgIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy5saW5rfTtcbiAgfVxuXG4gICR7cHJvcHMgPT4gIXByb3BzLmluaGVyaXRTaXplICYmIHJlc3BvbnNpdmVGb250U2l6ZVN0eWxlKHByb3BzKX0gJHtwcm9wcyA9PlxuICAgIHByb3BzLm5vd3JhcCAmJlxuICAgIGNzc2BcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgYH07XG5cbiAgJHtwcm9wcyA9PiBwcm9wcy5jdXN0b21TdHlsZSAmJiBwcm9wcy5jdXN0b21TdHlsZShwcm9wcyl9O1xuYClcblxuZXhwb3J0IGNvbnN0IExhYmVsID0gd2l0aE1lZGlhKFxuICB3aXRoVGhlbWUocHJvcHMgPT4gKFxuICAgIDxJbm5lckxhYmVsXG4gICAgICB7Li4uXy5vbWl0KHByb3BzLCBbJ2ZvcmNlTWVkaWFRdWVyeSddKX1cbiAgICAgIHRpdGxlPXtcbiAgICAgICAgcHJvY2Vzcy5pc1N0eWxlZ3VpZGlzdEFjdGl2ZSAmJlxuICAgICAgICAvKiBGb3IgZGVidWdnaW5nIHB1cnBvc2VzLCBzaG93IHRoZSBjdXJyZW50IHNpemUgYXMgYSB0b29sIHRpcCAqL1xuICAgICAgICByZXNwb25zaXZlU3R5bGUocHJvcHMsICdzaXplJywgc2l6ZSA9PiBpbmZlcmVGb250U2l6ZShwcm9wcywgc2l6ZSkpXG4gICAgICB9XG4gICAgLz5cbiAgKSksXG4pXG5cbmV4cG9ydCBjb25zdCBYWExhcmdlTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IHh4bD5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBYTGFyZ2VMYWJlbCA9IHByb3BzID0+IChcbiAgPExhYmVsIHsuLi5wcm9wc30geGw+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgTGFyZ2VMYWJlbCA9IHByb3BzID0+IChcbiAgPExhYmVsIHsuLi5wcm9wc30gbGc+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgTWVkaXVtTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IG1kPlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9MYWJlbD5cbilcblxuZXhwb3J0IGNvbnN0IFNtYWxsTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IHNtPlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9MYWJlbD5cbilcblxuZXhwb3J0IGNvbnN0IFhTbWFsbExhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSB4cz5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBFcnJvckxhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSBlcnJvcj5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBIZWFkZXIgPSBzdHlsZWQoTGFiZWwpYFxuICBsaW5lLWhlaWdodDogMS4zZW07XG5cbiAgY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuY29sb3JzLmxhYmVscy5pbXBvcnRhbnR9O1xuICBmb250LXNpemU6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubmV3LmZvbnRzLnNpemVzLmhlYWRlcn1weDtcbiAgZm9udC13ZWlnaHQ6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuZm9udHMud2VpZ2h0cy5zZW1pQm9sZH07XG5cbiAgJHtwcm9wcyA9PiBwcm9wcy5jdXN0b21TdHlsZSAmJiBwcm9wcy5jdXN0b21TdHlsZShwcm9wcyl9O1xuYFxuIl19 */"
};

const InnerLabel = withDirection(_styled("span", {
  target: "etf6pk90",
  label: "InnerLabel"
})("text-transform:", props => props.uppercase ? 'uppercase' : 'none', ";color:", props => infereFontColor(props, 'normal'), ";font-weight:", props => infereFontWeight(props), ";line-height:1.1em;text-align:", props => props.align || (props.direction === 'rtl' ? 'right' : 'left'), ";a{color:", props => props.theme.colors.link, ";}", props => !props.inheritSize && responsiveFontSizeStyle(props), " ", props => props.nowrap && _ref, ";", props => props.customStyle && props.customStyle(props), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxhYmVscy5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUI0QyIsImZpbGUiOiJMYWJlbHMuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCwgcmVhY3QvcHJvcC10eXBlcyAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXG5pbXBvcnQge2Nzc30gZnJvbSAnQGVtb3Rpb24vY29yZSdcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCB7d2l0aFRoZW1lfSBmcm9tICdlbW90aW9uLXRoZW1pbmcnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IHdpdGhEaXJlY3Rpb24gZnJvbSAnfi9jb3JlL3V0aWxzL21lZGlhSGVscGVycy93aXRoRGlyZWN0aW9uJ1xuXG5pbXBvcnQge1xuICByZXNwb25zaXZlU3R5bGUsXG4gIGluZmVyZUZvbnRTaXplLFxuICByZXNwb25zaXZlRm9udFNpemVTdHlsZSxcbiAgaW5mZXJlRm9udENvbG9yLFxuICBpbmZlcmVGb250V2VpZ2h0LFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcblxuY29uc3QgSW5uZXJMYWJlbCA9IHdpdGhEaXJlY3Rpb24oc3R5bGVkLnNwYW5gXG4gIHRleHQtdHJhbnNmb3JtOiAke3Byb3BzID0+IChwcm9wcy51cHBlcmNhc2UgPyAndXBwZXJjYXNlJyA6ICdub25lJyl9O1xuXG4gIGNvbG9yOiAke3Byb3BzID0+IGluZmVyZUZvbnRDb2xvcihwcm9wcywgJ25vcm1hbCcpfTtcblxuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgbGluZS1oZWlnaHQ6IDEuMWVtO1xuXG4gIHRleHQtYWxpZ246ICR7cHJvcHMgPT5cbiAgICBwcm9wcy5hbGlnbiB8fCAocHJvcHMuZGlyZWN0aW9uID09PSAncnRsJyA/ICdyaWdodCcgOiAnbGVmdCcpfTtcblxuICBhIHtcbiAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMubGlua307XG4gIH1cblxuICAke3Byb3BzID0+ICFwcm9wcy5pbmhlcml0U2l6ZSAmJiByZXNwb25zaXZlRm9udFNpemVTdHlsZShwcm9wcyl9ICR7cHJvcHMgPT5cbiAgICBwcm9wcy5ub3dyYXAgJiZcbiAgICBjc3NgXG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIGB9O1xuXG4gICR7cHJvcHMgPT4gcHJvcHMuY3VzdG9tU3R5bGUgJiYgcHJvcHMuY3VzdG9tU3R5bGUocHJvcHMpfTtcbmApXG5cbmV4cG9ydCBjb25zdCBMYWJlbCA9IHdpdGhNZWRpYShcbiAgd2l0aFRoZW1lKHByb3BzID0+IChcbiAgICA8SW5uZXJMYWJlbFxuICAgICAgey4uLl8ub21pdChwcm9wcywgWydmb3JjZU1lZGlhUXVlcnknXSl9XG4gICAgICB0aXRsZT17XG4gICAgICAgIHByb2Nlc3MuaXNTdHlsZWd1aWRpc3RBY3RpdmUgJiZcbiAgICAgICAgLyogRm9yIGRlYnVnZ2luZyBwdXJwb3Nlcywgc2hvdyB0aGUgY3VycmVudCBzaXplIGFzIGEgdG9vbCB0aXAgKi9cbiAgICAgICAgcmVzcG9uc2l2ZVN0eWxlKHByb3BzLCAnc2l6ZScsIHNpemUgPT4gaW5mZXJlRm9udFNpemUocHJvcHMsIHNpemUpKVxuICAgICAgfVxuICAgIC8+XG4gICkpLFxuKVxuXG5leHBvcnQgY29uc3QgWFhMYXJnZUxhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSB4eGw+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgWExhcmdlTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IHhsPlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9MYWJlbD5cbilcblxuZXhwb3J0IGNvbnN0IExhcmdlTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IGxnPlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9MYWJlbD5cbilcblxuZXhwb3J0IGNvbnN0IE1lZGl1bUxhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSBtZD5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBTbWFsbExhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSBzbT5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBYU21hbGxMYWJlbCA9IHByb3BzID0+IChcbiAgPExhYmVsIHsuLi5wcm9wc30geHM+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgRXJyb3JMYWJlbCA9IHByb3BzID0+IChcbiAgPExhYmVsIHsuLi5wcm9wc30gZXJyb3I+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkKExhYmVsKWBcbiAgbGluZS1oZWlnaHQ6IDEuM2VtO1xuXG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy5sYWJlbHMuaW1wb3J0YW50fTtcbiAgZm9udC1zaXplOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLm5ldy5mb250cy5zaXplcy5oZWFkZXJ9cHg7XG4gIGZvbnQtd2VpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmZvbnRzLndlaWdodHMuc2VtaUJvbGR9O1xuXG4gICR7cHJvcHMgPT4gcHJvcHMuY3VzdG9tU3R5bGUgJiYgcHJvcHMuY3VzdG9tU3R5bGUocHJvcHMpfTtcbmBcbiJdfQ== */")));
const Label = withMedia$1(withTheme(props => React.createElement(InnerLabel, _extends({}, _.omit(props, ['forceMediaQuery']), {
  title: process.isStyleguidistActive &&
  /* For debugging purposes, show the current size as a tool tip */
  responsiveStyle(props, 'size', size => infereFontSize(props, size))
}))));
const XXLargeLabel = props => React.createElement(Label, _extends({}, props, {
  xxl: true
}), props.children);
const XLargeLabel = props => React.createElement(Label, _extends({}, props, {
  xl: true
}), props.children);
const LargeLabel = props => React.createElement(Label, _extends({}, props, {
  lg: true
}), props.children);
const MediumLabel = props => React.createElement(Label, _extends({}, props, {
  md: true
}), props.children);
const SmallLabel = props => React.createElement(Label, _extends({}, props, {
  sm: true
}), props.children);
const XSmallLabel = props => React.createElement(Label, _extends({}, props, {
  xs: true
}), props.children);
const ErrorLabel = props => React.createElement(Label, _extends({}, props, {
  error: true
}), props.children);
const Header =
/*#__PURE__*/
_styled(Label, {
  target: "etf6pk91",
  label: "Header"
})("line-height:1.3em;color:", props => props.theme.colors.labels.important, ";font-size:", props => props.theme.new.fonts.sizes.header, "px;font-weight:", props => props.theme.fonts.weights.semiBold, ";", props => props.customStyle && props.customStyle(props), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxhYmVscy5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUdtQyIsImZpbGUiOiJMYWJlbHMuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L3ByZWZlci1kZWZhdWx0LWV4cG9ydCwgcmVhY3QvcHJvcC10eXBlcyAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXG5pbXBvcnQge2Nzc30gZnJvbSAnQGVtb3Rpb24vY29yZSdcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCB7d2l0aFRoZW1lfSBmcm9tICdlbW90aW9uLXRoZW1pbmcnXG5pbXBvcnQgd2l0aE1lZGlhIGZyb20gJ34vY29yZS91dGlscy9tZWRpYUhlbHBlcnMvd2l0aE1lZGlhJ1xuaW1wb3J0IHdpdGhEaXJlY3Rpb24gZnJvbSAnfi9jb3JlL3V0aWxzL21lZGlhSGVscGVycy93aXRoRGlyZWN0aW9uJ1xuXG5pbXBvcnQge1xuICByZXNwb25zaXZlU3R5bGUsXG4gIGluZmVyZUZvbnRTaXplLFxuICByZXNwb25zaXZlRm9udFNpemVTdHlsZSxcbiAgaW5mZXJlRm9udENvbG9yLFxuICBpbmZlcmVGb250V2VpZ2h0LFxufSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSdcblxuY29uc3QgSW5uZXJMYWJlbCA9IHdpdGhEaXJlY3Rpb24oc3R5bGVkLnNwYW5gXG4gIHRleHQtdHJhbnNmb3JtOiAke3Byb3BzID0+IChwcm9wcy51cHBlcmNhc2UgPyAndXBwZXJjYXNlJyA6ICdub25lJyl9O1xuXG4gIGNvbG9yOiAke3Byb3BzID0+IGluZmVyZUZvbnRDb2xvcihwcm9wcywgJ25vcm1hbCcpfTtcblxuICBmb250LXdlaWdodDogJHtwcm9wcyA9PiBpbmZlcmVGb250V2VpZ2h0KHByb3BzKX07XG5cbiAgbGluZS1oZWlnaHQ6IDEuMWVtO1xuXG4gIHRleHQtYWxpZ246ICR7cHJvcHMgPT5cbiAgICBwcm9wcy5hbGlnbiB8fCAocHJvcHMuZGlyZWN0aW9uID09PSAncnRsJyA/ICdyaWdodCcgOiAnbGVmdCcpfTtcblxuICBhIHtcbiAgICBjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMubGlua307XG4gIH1cblxuICAke3Byb3BzID0+ICFwcm9wcy5pbmhlcml0U2l6ZSAmJiByZXNwb25zaXZlRm9udFNpemVTdHlsZShwcm9wcyl9ICR7cHJvcHMgPT5cbiAgICBwcm9wcy5ub3dyYXAgJiZcbiAgICBjc3NgXG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIGB9O1xuXG4gICR7cHJvcHMgPT4gcHJvcHMuY3VzdG9tU3R5bGUgJiYgcHJvcHMuY3VzdG9tU3R5bGUocHJvcHMpfTtcbmApXG5cbmV4cG9ydCBjb25zdCBMYWJlbCA9IHdpdGhNZWRpYShcbiAgd2l0aFRoZW1lKHByb3BzID0+IChcbiAgICA8SW5uZXJMYWJlbFxuICAgICAgey4uLl8ub21pdChwcm9wcywgWydmb3JjZU1lZGlhUXVlcnknXSl9XG4gICAgICB0aXRsZT17XG4gICAgICAgIHByb2Nlc3MuaXNTdHlsZWd1aWRpc3RBY3RpdmUgJiZcbiAgICAgICAgLyogRm9yIGRlYnVnZ2luZyBwdXJwb3Nlcywgc2hvdyB0aGUgY3VycmVudCBzaXplIGFzIGEgdG9vbCB0aXAgKi9cbiAgICAgICAgcmVzcG9uc2l2ZVN0eWxlKHByb3BzLCAnc2l6ZScsIHNpemUgPT4gaW5mZXJlRm9udFNpemUocHJvcHMsIHNpemUpKVxuICAgICAgfVxuICAgIC8+XG4gICkpLFxuKVxuXG5leHBvcnQgY29uc3QgWFhMYXJnZUxhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSB4eGw+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgWExhcmdlTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IHhsPlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9MYWJlbD5cbilcblxuZXhwb3J0IGNvbnN0IExhcmdlTGFiZWwgPSBwcm9wcyA9PiAoXG4gIDxMYWJlbCB7Li4ucHJvcHN9IGxnPlxuICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgPC9MYWJlbD5cbilcblxuZXhwb3J0IGNvbnN0IE1lZGl1bUxhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSBtZD5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBTbWFsbExhYmVsID0gcHJvcHMgPT4gKFxuICA8TGFiZWwgey4uLnByb3BzfSBzbT5cbiAgICB7cHJvcHMuY2hpbGRyZW59XG4gIDwvTGFiZWw+XG4pXG5cbmV4cG9ydCBjb25zdCBYU21hbGxMYWJlbCA9IHByb3BzID0+IChcbiAgPExhYmVsIHsuLi5wcm9wc30geHM+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgRXJyb3JMYWJlbCA9IHByb3BzID0+IChcbiAgPExhYmVsIHsuLi5wcm9wc30gZXJyb3I+XG4gICAge3Byb3BzLmNoaWxkcmVufVxuICA8L0xhYmVsPlxuKVxuXG5leHBvcnQgY29uc3QgSGVhZGVyID0gc3R5bGVkKExhYmVsKWBcbiAgbGluZS1oZWlnaHQ6IDEuM2VtO1xuXG4gIGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy5sYWJlbHMuaW1wb3J0YW50fTtcbiAgZm9udC1zaXplOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLm5ldy5mb250cy5zaXplcy5oZWFkZXJ9cHg7XG4gIGZvbnQtd2VpZ2h0OiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmZvbnRzLndlaWdodHMuc2VtaUJvbGR9O1xuXG4gICR7cHJvcHMgPT4gcHJvcHMuY3VzdG9tU3R5bGUgJiYgcHJvcHMuY3VzdG9tU3R5bGUocHJvcHMpfTtcbmBcbiJdfQ== */"));

const RootContainer =
/*#__PURE__*/
_styled(Row, {
  target: "e1p8ooh0",
  label: "RootContainer"
})(process.env.NODE_ENV === "production" ? {
  name: "4g6ai3",
  styles: "cursor:pointer;"
} : {
  name: "4g6ai3",
  styles: "cursor:pointer;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrSW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBY2lDIiwiZmlsZSI6IkNoZWNrSW5wdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBpbmRlbnQgKi9cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHdpdGhNZWRpYSBmcm9tICd+L2NvcmUvdXRpbHMvbWVkaWFIZWxwZXJzL3dpdGhNZWRpYSc7XHJcbmltcG9ydCB7IFJvdyB9IGZyb20gJ34vY29yZVVJL2NvbXBvbmVudHMvbGF5b3V0cy9oZWxwZXJzL0xpbmVhckxheW91dCc7XHJcbmltcG9ydCBTcGFjZXIgZnJvbSAnfi9jb3JlVUkvY29tcG9uZW50cy9sYXlvdXRzL2hlbHBlcnMvU3BhY2VyJztcclxuaW1wb3J0IHsgcHJvcHNGb3JQcmVmaXgsIGluZmVyZUNvbnRyb2xUeXBlLCBpbmZlcmVOYW1lZEZvbnRTaXplLCByZXNwb25zaXZlU3R5bGUsIGluZmVyZUJvcmRlclJhZGl1cywgY29sb3JTdHlsZXMsIGRpc2FibGVkQ29sb3JTdHlsZXMgfSBmcm9tICd+L2NvcmVVSS91dGlscy9pbmZlcmVTdHlsZSc7XHJcbmltcG9ydCBJY29uIGZyb20gJ34vY29yZVVJL2NvbXBvbmVudHMvYmFzaWMvSWNvbic7XHJcbmltcG9ydCBzcGFjZVN0eWxlcyBmcm9tICd+L2NvcmVVSS91dGlscy9zdHlsZVN5c3RlbSc7XHJcblxyXG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gJy4vTGFiZWxzJztcclxuXHJcbmNvbnN0IFJvb3RDb250YWluZXIgPSBzdHlsZWQoUm93KWBcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbmA7XHJcblxyXG5jb25zdCBSZWFsSGlkZGVuQ2hlY2tJbnB1dCA9IHN0eWxlZC5pbnB1dGBcclxuICBvcGFjaXR5OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAtOTk5cHg7XHJcblxyXG4gICYgKyBkaXYge1xyXG4gICAgJHtwcm9wcyA9PiByZXNwb25zaXZlU3R5bGUocHJvcHMsICdzaXplJywgc2l6ZSA9PiBjc3NgXHJcbiAgICAgIC8qIFdvcmthcm91bmQgZm9yIEZsZXhib3ggJiBHcmlkIGluY29uc2lzdGVuY2llcyB3aGVuIHVzaW5nIG9ubHkgd2lkdGgvaGVpZ2h0ICovXHJcbiAgICAgIG1pbi13aWR0aDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgbWF4LXdpZHRoOiAkezEuMyAqIGluZmVyZU5hbWVkRm9udFNpemUocHJvcHMsIHNpemUpfXB4O1xyXG4gICAgICBtaW4taGVpZ2h0OiAkezEuMyAqIGluZmVyZU5hbWVkRm9udFNpemUocHJvcHMsIHNpemUpfXB4O1xyXG4gICAgICBtYXgtaGVpZ2h0OiAkezEuMyAqIGluZmVyZU5hbWVkRm9udFNpemUocHJvcHMsIHNpemUpfXB4O1xyXG4gICAgICBmb250LXNpemU6ICR7MC43ICogaW5mZXJlTmFtZWRGb250U2l6ZShwcm9wcywgc2l6ZSl9cHg7XHJcbiAgICBgKX07XHJcblxyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAke3Byb3BzID0+IGluZmVyZUJvcmRlclJhZGl1cyhwcm9wcyl9cHg7IFxyXG4gICAgXHJcbiAgICAke3Byb3BzID0+IHNwYWNlU3R5bGVzKHByb3BzKX1cclxuICAgICR7cHJvcHMgPT4gKHByb3BzLmRpc2FibGVkID8gZGlzYWJsZWRDb2xvclN0eWxlcyhwcm9wcykgOiBjb2xvclN0eWxlcyhwcm9wcykpfVxyXG4gIH1cclxuXHJcbiAgJjpmb2N1cyArIGRpdiB7XHJcbiAgICBib3JkZXItY29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUubmV3LmlucHV0cy5mb2N1c0JvcmRlckNvbG9yW2luZmVyZUNvbnRyb2xUeXBlKHByb3BzKV19O1xyXG4gIH1cclxuYDtcclxuXHJcbi8vIENoZWNrSW5wdXQgd29yayBmb3IgYm90aCBjaGVja2JveCBhbmQgcmFkaW8gYnV0dG9uXHJcbmZ1bmN0aW9uIENoZWNrSW5wdXRFbCh7XHJcbiAgcmVuZGVySWNvbiA9ICgpID0+IDxJY29uIGNsYXNzTmFtZT1cImZhcyBmYS1jaGVja1wiIC8+LFxyXG4gIGNoZWNrZWQgPSBmYWxzZSxcclxuICBvbkNsaWNrID0gKCkgPT4ge30sXHJcbiAgb25DaGFuZ2UgPSBvbkNsaWNrLFxyXG4gIHR5cGUsXHJcbiAgLi4ucHJvcHNcclxufSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8Um9vdENvbnRhaW5lclxyXG4gICAgICBjZW50ZXJBbGlnbmVkXHJcbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XHJcbiAgICA+XHJcbiAgICAgIDxSZWFsSGlkZGVuQ2hlY2tJbnB1dFxyXG4gICAgICAgIHR5cGU9e3R5cGV9XHJcbiAgICAgICAgaWQ9e3Byb3BzLmVsZW1JRH1cclxuICAgICAgICB7Li4ucHJvcHN9XHJcbiAgICAgICAgaW52ZXJ0ZWQ9e3Byb3BzLmludmVydGVkIHx8ICFjaGVja2VkfVxyXG4gICAgICAgIGNoZWNrZWQ9e2NoZWNrZWR9XHJcbiAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAvPlxyXG4gICAgICA8Um93XHJcbiAgICAgICAgZnVsbFdpZHRoXHJcbiAgICAgICAgZnVsbEhlaWdodFxyXG4gICAgICAgIGNlbnRlckFsaWduZWRcclxuICAgICAgICBjZW50ZXJKdXN0aWZpZWRcclxuICAgICAgICB0eXBlPXt0eXBlfVxyXG4gICAgICAgIHsuLi5wcm9wc31cclxuICAgICAgPlxyXG4gICAgICAgIHtjaGVja2VkICYmIHJlbmRlckljb24ocHJvcHMpfVxyXG4gICAgICA8L1Jvdz5cclxuICAgICAge3Byb3BzLmxhYmVsICYmXHJcbiAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgICAgPFNwYWNlciAvPlxyXG4gICAgICAgICAgPExhYmVsXHJcbiAgICAgICAgICAgIHNpemU9e3Byb3BzLnNpemV9XHJcbiAgICAgICAgICAgIGJvbGQ9e3Byb3BzLmJvbGR9XHJcbiAgICAgICAgICAgIHsuLi5wcm9wc0ZvclByZWZpeChwcm9wcywgJ2xhYmVsXycpfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICB7cHJvcHMubGFiZWx9XHJcbiAgICAgICAgICA8L0xhYmVsPlxyXG4gICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XHJcbiAgICAgIH1cclxuICAgIDwvUm9vdENvbnRhaW5lcj5cclxuICApO1xyXG59XHJcblxyXG5DaGVja0lucHV0RWwucHJvcFR5cGVzID0gUHJvcFR5cGVzLnNoYXBlKHtcclxuICBlbGVtSUQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxufSkuaXNSZXF1aXJlZDtcclxuXHJcbmNvbnN0IENoZWNrSW5wdXQgPSB3aXRoTWVkaWEoQ2hlY2tJbnB1dEVsKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENoZWNrSW5wdXQ7XHJcbiJdfQ== */"
});

const RealHiddenCheckInput = _styled("input", {
  target: "e1p8ooh1",
  label: "RealHiddenCheckInput"
})("opacity:0;position:absolute;left:-999px;& + div{", props => responsiveStyle(props, 'size', size =>
/*#__PURE__*/
css("min-width:", 1.3 * infereNamedFontSize(props, size), "px;max-width:", 1.3 * infereNamedFontSize(props, size), "px;min-height:", 1.3 * infereNamedFontSize(props, size), "px;max-height:", 1.3 * infereNamedFontSize(props, size), "px;font-size:", 0.7 * infereNamedFontSize(props, size), "px;label:RealHiddenCheckInput;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrSW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0J5RCIsImZpbGUiOiJDaGVja0lucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW5kZW50ICovXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB3aXRoTWVkaWEgZnJvbSAnfi9jb3JlL3V0aWxzL21lZGlhSGVscGVycy93aXRoTWVkaWEnO1xyXG5pbXBvcnQgeyBSb3cgfSBmcm9tICd+L2NvcmVVSS9jb21wb25lbnRzL2xheW91dHMvaGVscGVycy9MaW5lYXJMYXlvdXQnO1xyXG5pbXBvcnQgU3BhY2VyIGZyb20gJ34vY29yZVVJL2NvbXBvbmVudHMvbGF5b3V0cy9oZWxwZXJzL1NwYWNlcic7XHJcbmltcG9ydCB7IHByb3BzRm9yUHJlZml4LCBpbmZlcmVDb250cm9sVHlwZSwgaW5mZXJlTmFtZWRGb250U2l6ZSwgcmVzcG9uc2l2ZVN0eWxlLCBpbmZlcmVCb3JkZXJSYWRpdXMsIGNvbG9yU3R5bGVzLCBkaXNhYmxlZENvbG9yU3R5bGVzIH0gZnJvbSAnfi9jb3JlVUkvdXRpbHMvaW5mZXJlU3R5bGUnO1xyXG5pbXBvcnQgSWNvbiBmcm9tICd+L2NvcmVVSS9jb21wb25lbnRzL2Jhc2ljL0ljb24nO1xyXG5pbXBvcnQgc3BhY2VTdHlsZXMgZnJvbSAnfi9jb3JlVUkvdXRpbHMvc3R5bGVTeXN0ZW0nO1xyXG5cclxuaW1wb3J0IHsgTGFiZWwgfSBmcm9tICcuL0xhYmVscyc7XHJcblxyXG5jb25zdCBSb290Q29udGFpbmVyID0gc3R5bGVkKFJvdylgXHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5gO1xyXG5cclxuY29uc3QgUmVhbEhpZGRlbkNoZWNrSW5wdXQgPSBzdHlsZWQuaW5wdXRgXHJcbiAgb3BhY2l0eTogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogLTk5OXB4O1xyXG5cclxuICAmICsgZGl2IHtcclxuICAgICR7cHJvcHMgPT4gcmVzcG9uc2l2ZVN0eWxlKHByb3BzLCAnc2l6ZScsIHNpemUgPT4gY3NzYFxyXG4gICAgICAvKiBXb3JrYXJvdW5kIGZvciBGbGV4Ym94ICYgR3JpZCBpbmNvbnNpc3RlbmNpZXMgd2hlbiB1c2luZyBvbmx5IHdpZHRoL2hlaWdodCAqL1xyXG4gICAgICBtaW4td2lkdGg6ICR7MS4zICogaW5mZXJlTmFtZWRGb250U2l6ZShwcm9wcywgc2l6ZSl9cHg7XHJcbiAgICAgIG1heC13aWR0aDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgbWluLWhlaWdodDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgbWF4LWhlaWdodDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgZm9udC1zaXplOiAkezAuNyAqIGluZmVyZU5hbWVkRm9udFNpemUocHJvcHMsIHNpemUpfXB4O1xyXG4gICAgYCl9O1xyXG5cclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogJHtwcm9wcyA9PiBpbmZlcmVCb3JkZXJSYWRpdXMocHJvcHMpfXB4OyBcclxuICAgIFxyXG4gICAgJHtwcm9wcyA9PiBzcGFjZVN0eWxlcyhwcm9wcyl9XHJcbiAgICAke3Byb3BzID0+IChwcm9wcy5kaXNhYmxlZCA/IGRpc2FibGVkQ29sb3JTdHlsZXMocHJvcHMpIDogY29sb3JTdHlsZXMocHJvcHMpKX1cclxuICB9XHJcblxyXG4gICY6Zm9jdXMgKyBkaXYge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLm5ldy5pbnB1dHMuZm9jdXNCb3JkZXJDb2xvcltpbmZlcmVDb250cm9sVHlwZShwcm9wcyldfTtcclxuICB9XHJcbmA7XHJcblxyXG4vLyBDaGVja0lucHV0IHdvcmsgZm9yIGJvdGggY2hlY2tib3ggYW5kIHJhZGlvIGJ1dHRvblxyXG5mdW5jdGlvbiBDaGVja0lucHV0RWwoe1xyXG4gIHJlbmRlckljb24gPSAoKSA9PiA8SWNvbiBjbGFzc05hbWU9XCJmYXMgZmEtY2hlY2tcIiAvPixcclxuICBjaGVja2VkID0gZmFsc2UsXHJcbiAgb25DbGljayA9ICgpID0+IHt9LFxyXG4gIG9uQ2hhbmdlID0gb25DbGljayxcclxuICB0eXBlLFxyXG4gIC4uLnByb3BzXHJcbn0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPFJvb3RDb250YWluZXJcclxuICAgICAgY2VudGVyQWxpZ25lZFxyXG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxyXG4gICAgPlxyXG4gICAgICA8UmVhbEhpZGRlbkNoZWNrSW5wdXRcclxuICAgICAgICB0eXBlPXt0eXBlfVxyXG4gICAgICAgIGlkPXtwcm9wcy5lbGVtSUR9XHJcbiAgICAgICAgey4uLnByb3BzfVxyXG4gICAgICAgIGludmVydGVkPXtwcm9wcy5pbnZlcnRlZCB8fCAhY2hlY2tlZH1cclxuICAgICAgICBjaGVja2VkPXtjaGVja2VkfVxyXG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgLz5cclxuICAgICAgPFJvd1xyXG4gICAgICAgIGZ1bGxXaWR0aFxyXG4gICAgICAgIGZ1bGxIZWlnaHRcclxuICAgICAgICBjZW50ZXJBbGlnbmVkXHJcbiAgICAgICAgY2VudGVySnVzdGlmaWVkXHJcbiAgICAgICAgdHlwZT17dHlwZX1cclxuICAgICAgICB7Li4ucHJvcHN9XHJcbiAgICAgID5cclxuICAgICAgICB7Y2hlY2tlZCAmJiByZW5kZXJJY29uKHByb3BzKX1cclxuICAgICAgPC9Sb3c+XHJcbiAgICAgIHtwcm9wcy5sYWJlbCAmJlxyXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cclxuICAgICAgICAgIDxTcGFjZXIgLz5cclxuICAgICAgICAgIDxMYWJlbFxyXG4gICAgICAgICAgICBzaXplPXtwcm9wcy5zaXplfVxyXG4gICAgICAgICAgICBib2xkPXtwcm9wcy5ib2xkfVxyXG4gICAgICAgICAgICB7Li4ucHJvcHNGb3JQcmVmaXgocHJvcHMsICdsYWJlbF8nKX1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge3Byb3BzLmxhYmVsfVxyXG4gICAgICAgICAgPC9MYWJlbD5cclxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gICAgICB9XHJcbiAgICA8L1Jvb3RDb250YWluZXI+XHJcbiAgKTtcclxufVxyXG5cclxuQ2hlY2tJbnB1dEVsLnByb3BUeXBlcyA9IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgZWxlbUlEOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbn0pLmlzUmVxdWlyZWQ7XHJcblxyXG5jb25zdCBDaGVja0lucHV0ID0gd2l0aE1lZGlhKENoZWNrSW5wdXRFbCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGVja0lucHV0O1xyXG4iXX0= */"))), ";border:1px solid;border-radius:", props => infereBorderRadius(props), "px;", props => spaceStyles(props), " ", props => props.disabled ? disabledColorStyles(props) : colorStyles(props), "}&:focus + div{border-color:", props => props.theme.new.inputs.focusBorderColor[infereControlType(props)], ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrSW5wdXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0J5QyIsImZpbGUiOiJDaGVja0lucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW5kZW50ICovXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCB3aXRoTWVkaWEgZnJvbSAnfi9jb3JlL3V0aWxzL21lZGlhSGVscGVycy93aXRoTWVkaWEnO1xyXG5pbXBvcnQgeyBSb3cgfSBmcm9tICd+L2NvcmVVSS9jb21wb25lbnRzL2xheW91dHMvaGVscGVycy9MaW5lYXJMYXlvdXQnO1xyXG5pbXBvcnQgU3BhY2VyIGZyb20gJ34vY29yZVVJL2NvbXBvbmVudHMvbGF5b3V0cy9oZWxwZXJzL1NwYWNlcic7XHJcbmltcG9ydCB7IHByb3BzRm9yUHJlZml4LCBpbmZlcmVDb250cm9sVHlwZSwgaW5mZXJlTmFtZWRGb250U2l6ZSwgcmVzcG9uc2l2ZVN0eWxlLCBpbmZlcmVCb3JkZXJSYWRpdXMsIGNvbG9yU3R5bGVzLCBkaXNhYmxlZENvbG9yU3R5bGVzIH0gZnJvbSAnfi9jb3JlVUkvdXRpbHMvaW5mZXJlU3R5bGUnO1xyXG5pbXBvcnQgSWNvbiBmcm9tICd+L2NvcmVVSS9jb21wb25lbnRzL2Jhc2ljL0ljb24nO1xyXG5pbXBvcnQgc3BhY2VTdHlsZXMgZnJvbSAnfi9jb3JlVUkvdXRpbHMvc3R5bGVTeXN0ZW0nO1xyXG5cclxuaW1wb3J0IHsgTGFiZWwgfSBmcm9tICcuL0xhYmVscyc7XHJcblxyXG5jb25zdCBSb290Q29udGFpbmVyID0gc3R5bGVkKFJvdylgXHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5gO1xyXG5cclxuY29uc3QgUmVhbEhpZGRlbkNoZWNrSW5wdXQgPSBzdHlsZWQuaW5wdXRgXHJcbiAgb3BhY2l0eTogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogLTk5OXB4O1xyXG5cclxuICAmICsgZGl2IHtcclxuICAgICR7cHJvcHMgPT4gcmVzcG9uc2l2ZVN0eWxlKHByb3BzLCAnc2l6ZScsIHNpemUgPT4gY3NzYFxyXG4gICAgICAvKiBXb3JrYXJvdW5kIGZvciBGbGV4Ym94ICYgR3JpZCBpbmNvbnNpc3RlbmNpZXMgd2hlbiB1c2luZyBvbmx5IHdpZHRoL2hlaWdodCAqL1xyXG4gICAgICBtaW4td2lkdGg6ICR7MS4zICogaW5mZXJlTmFtZWRGb250U2l6ZShwcm9wcywgc2l6ZSl9cHg7XHJcbiAgICAgIG1heC13aWR0aDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgbWluLWhlaWdodDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgbWF4LWhlaWdodDogJHsxLjMgKiBpbmZlcmVOYW1lZEZvbnRTaXplKHByb3BzLCBzaXplKX1weDtcclxuICAgICAgZm9udC1zaXplOiAkezAuNyAqIGluZmVyZU5hbWVkRm9udFNpemUocHJvcHMsIHNpemUpfXB4O1xyXG4gICAgYCl9O1xyXG5cclxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogJHtwcm9wcyA9PiBpbmZlcmVCb3JkZXJSYWRpdXMocHJvcHMpfXB4OyBcclxuICAgIFxyXG4gICAgJHtwcm9wcyA9PiBzcGFjZVN0eWxlcyhwcm9wcyl9XHJcbiAgICAke3Byb3BzID0+IChwcm9wcy5kaXNhYmxlZCA/IGRpc2FibGVkQ29sb3JTdHlsZXMocHJvcHMpIDogY29sb3JTdHlsZXMocHJvcHMpKX1cclxuICB9XHJcblxyXG4gICY6Zm9jdXMgKyBkaXYge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLm5ldy5pbnB1dHMuZm9jdXNCb3JkZXJDb2xvcltpbmZlcmVDb250cm9sVHlwZShwcm9wcyldfTtcclxuICB9XHJcbmA7XHJcblxyXG4vLyBDaGVja0lucHV0IHdvcmsgZm9yIGJvdGggY2hlY2tib3ggYW5kIHJhZGlvIGJ1dHRvblxyXG5mdW5jdGlvbiBDaGVja0lucHV0RWwoe1xyXG4gIHJlbmRlckljb24gPSAoKSA9PiA8SWNvbiBjbGFzc05hbWU9XCJmYXMgZmEtY2hlY2tcIiAvPixcclxuICBjaGVja2VkID0gZmFsc2UsXHJcbiAgb25DbGljayA9ICgpID0+IHt9LFxyXG4gIG9uQ2hhbmdlID0gb25DbGljayxcclxuICB0eXBlLFxyXG4gIC4uLnByb3BzXHJcbn0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPFJvb3RDb250YWluZXJcclxuICAgICAgY2VudGVyQWxpZ25lZFxyXG4gICAgICBvbkNsaWNrPXtvbkNsaWNrfVxyXG4gICAgPlxyXG4gICAgICA8UmVhbEhpZGRlbkNoZWNrSW5wdXRcclxuICAgICAgICB0eXBlPXt0eXBlfVxyXG4gICAgICAgIGlkPXtwcm9wcy5lbGVtSUR9XHJcbiAgICAgICAgey4uLnByb3BzfVxyXG4gICAgICAgIGludmVydGVkPXtwcm9wcy5pbnZlcnRlZCB8fCAhY2hlY2tlZH1cclxuICAgICAgICBjaGVja2VkPXtjaGVja2VkfVxyXG4gICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cclxuICAgICAgLz5cclxuICAgICAgPFJvd1xyXG4gICAgICAgIGZ1bGxXaWR0aFxyXG4gICAgICAgIGZ1bGxIZWlnaHRcclxuICAgICAgICBjZW50ZXJBbGlnbmVkXHJcbiAgICAgICAgY2VudGVySnVzdGlmaWVkXHJcbiAgICAgICAgdHlwZT17dHlwZX1cclxuICAgICAgICB7Li4ucHJvcHN9XHJcbiAgICAgID5cclxuICAgICAgICB7Y2hlY2tlZCAmJiByZW5kZXJJY29uKHByb3BzKX1cclxuICAgICAgPC9Sb3c+XHJcbiAgICAgIHtwcm9wcy5sYWJlbCAmJlxyXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cclxuICAgICAgICAgIDxTcGFjZXIgLz5cclxuICAgICAgICAgIDxMYWJlbFxyXG4gICAgICAgICAgICBzaXplPXtwcm9wcy5zaXplfVxyXG4gICAgICAgICAgICBib2xkPXtwcm9wcy5ib2xkfVxyXG4gICAgICAgICAgICB7Li4ucHJvcHNGb3JQcmVmaXgocHJvcHMsICdsYWJlbF8nKX1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge3Byb3BzLmxhYmVsfVxyXG4gICAgICAgICAgPC9MYWJlbD5cclxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gICAgICB9XHJcbiAgICA8L1Jvb3RDb250YWluZXI+XHJcbiAgKTtcclxufVxyXG5cclxuQ2hlY2tJbnB1dEVsLnByb3BUeXBlcyA9IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgZWxlbUlEOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbn0pLmlzUmVxdWlyZWQ7XHJcblxyXG5jb25zdCBDaGVja0lucHV0ID0gd2l0aE1lZGlhKENoZWNrSW5wdXRFbCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGVja0lucHV0O1xyXG4iXX0= */")); // CheckInput work for both checkbox and radio button


function CheckInputEl({
  renderIcon = () => React.createElement(Icon, {
    className: "fas fa-check"
  }),
  checked = false,
  onClick = () => {},
  onChange = onClick,
  type,
  ...props
}) {
  return React.createElement(RootContainer, {
    centerAligned: true,
    onClick: onClick
  }, React.createElement(RealHiddenCheckInput, _extends({
    type: type,
    id: props.elemID
  }, props, {
    inverted: props.inverted || !checked,
    checked: checked,
    onChange: onChange
  })), React.createElement(Row, _extends({
    fullWidth: true,
    fullHeight: true,
    centerAligned: true,
    centerJustified: true,
    type: type
  }, props), checked && renderIcon(props)), props.label && React.createElement(React.Fragment, null, React.createElement(Spacer, null), React.createElement(Label, _extends({
    size: props.size,
    bold: props.bold
  }, propsForPrefix(props, 'label_')), props.label)));
}

CheckInputEl.propTypes = PropTypes.shape({
  elemID: PropTypes.string.isRequired
}).isRequired;
const CheckInput = withMedia$1(CheckInputEl);

class Checkbox extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      previouslyRecievedChecked: true,
      // eslint-disable-line react/no-unused-state
      checked: true
    });

    _defineProperty(this, "onClick", () => {
      if (this.props.disabled) {
        return;
      }

      this.setState({
        checked: !this.state.checked
      });
    });

    _defineProperty(this, "isChecked", () => this.state.checked);

    _defineProperty(this, "handleInputChange", event => {
      if (this.props.onChange) {
        this.props.onChange(event);
      }

      this.setState({
        checked: event.target.checked
      });
    });

    _defineProperty(this, "render", () => React.createElement(CheckInput, _extends({}, this.props, {
      type: "checkbox",
      checked: this.state.checked,
      onClick: () => this.onClick(),
      onChange: this.handleInputChange,
      renderIcon: () => React.createElement(Icon, {
        className: "fas fa-check"
      })
    })));
  }

  static getDerivedStateFromProps(newProps, prevState) {
    if (newProps.checked !== prevState.previouslyRecievedChecked) {
      return {
        previouslyRecievedChecked: newProps.checked,
        checked: newProps.checked
      };
    }

    return null;
  }

}

Checkbox.propTypes = PropTypes.shape({
  elemID: PropTypes.string.isRequired
}).isRequired;

/* eslint-disable */
// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js
function murmurhash2_32_gc(str) {
  var l = str.length,
      h = l ^ l,
      i = 0,
      k;

  while (l >= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    k ^= k >>> 24;
    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);
    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;
    l -= 4;
    ++i;
  }

  switch (l) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
  }

  h ^= h >>> 13;
  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);
  h ^= h >>> 15;
  return (h >>> 0).toString(36);
}

var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;
var processStyleName = memoize(function (styleName) {
  return styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
  if (value == null || typeof value === 'boolean') {
    return '';
  }

  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          value = value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }

  if (unitlessKeys[key] !== 1 && key.charCodeAt(1) !== 45 && // custom properties
  typeof value === 'number' && value !== 0) {
    return value + 'px';
  }

  return value;
};

if (process.env.NODE_ENV !== 'production') {
  var contentValuePattern = /(attr|calc|counters?|url)\(/;
  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];
  var oldProcessStyleValue = processStyleValue;
  var msPattern = /^-ms-/;
  var hyphenPattern = /-(.)/g;
  var hyphenatedCache = {};

  processStyleValue = function processStyleValue(key, value) {
    if (key === 'content') {
      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '"' && value.charAt(0) !== "'")) {
        console.error("You seem to be using a value for 'content' without quotes, try replacing it with `content: '\"" + value + "\"'`");
      }
    }

    var processed = oldProcessStyleValue(key, value);
    var isCssVariable = key.charCodeAt(1) === 45;

    if (processed !== '' && !isCssVariable && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {
      hyphenatedCache[key] = true;
      console.error("Using kebab-case for css properties in objects is not supported. Did you mean " + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, char) {
        return char.toUpperCase();
      }) + "?");
    }

    return processed;
  };
}

var shouldWarnAboutInterpolatingClassNameFromCss = true;

function handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {
  if (interpolation == null) {
    return '';
  }

  if (interpolation.__emotion_styles !== undefined) {
    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {
      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
    }

    return interpolation;
  }

  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }

    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }

        if (interpolation.styles !== undefined) {
          var next = interpolation.next;

          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }

          var styles = interpolation.styles;

          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {
            styles += interpolation.map;
          }

          return styles;
        }

        return createStringFromObject(mergedProps, registered, interpolation);
      }

    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);
        } else if (process.env.NODE_ENV !== 'production') {
          console.error('Functions that are interpolated in css calls will be stringified.\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\n' + 'It can be called directly with props or interpolated in a styled call like this\n' + "let SomeComponent = styled('div')`${dynamicStyle}`");
        }
      }
    // eslint-disable-next-line no-fallthrough

    default:
      {
        if (registered == null) {
          return interpolation;
        }

        var cached = registered[interpolation];

        if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {
          console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');
          shouldWarnAboutInterpolatingClassNameFromCss = false;
        }

        return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;
      }
  }
}

function createStringFromObject(mergedProps, registered, obj) {
  var string = '';

  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i], false);
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];

      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {
          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');
        }

        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
          }
        } else {
          string += _key + "{" + handleInterpolation(mergedProps, registered, value, false) + "}";
        }
      }
    }
  }

  return string;
}

var labelPattern = /label:\s*([^\s;\n{]+)\s*;/g;
var sourceMapPattern;

if (process.env.NODE_ENV !== 'production') {
  sourceMapPattern = /\/\*#\ssourceMappingURL=data:application\/json;\S+\s+\*\//;
} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list


var cursor;

var serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }

  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];

  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings, false);
  } else {
    styles += strings[0];
  } // we start at 1 since we've already handled the first arg


  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);

    if (stringMode) {
      styles += strings[i];
    }
  }

  var sourceMap;

  if (process.env.NODE_ENV !== 'production') {
    styles = styles.replace(sourceMapPattern, function (match) {
      sourceMap = match;
      return '';
    });
  } // using a global regex with .exec is stateful so lastIndex has to be reset each time


  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' + // $FlowFixMe we know it's not null
    match[1];
  }

  var name = murmurhash2_32_gc(styles) + identifierName;

  if (process.env.NODE_ENV !== 'production') {
    return {
      name: name,
      styles: styles,
      map: sourceMap,
      next: cursor
    };
  }

  return {
    name: name,
    styles: styles,
    next: cursor
  };
};

function css$1() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return serializeStyles(args);
}

const darken$1 = curry((color, ratio) => Color(color).darken(ratio).toString());
const lighten = curry((color, ratio) => Color(color).lighten(ratio).toString());
const btn = {
  position: 'relative',
  color: 'black',
  padding: '10px 20px',
  borderRadius: '5px',
  boxShadow: 'rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)',
  transition: '0.3s all ease',
  cursor: 'pointer'
};
const fullWidth = {
  width: '100%'
};

const btnBlock = ({
  block
}) => block && fullWidth;

const sizeTypes = {
  xs: {
    font: 11,
    space: 6
  },
  md: {
    font: 14,
    space: 10
  },
  lg: {
    font: 24,
    space: 18
  }
};

const btnSize = ({
  size = 'md',
  px = 1,
  tight
}) => {
  const ratio = tight ? 0.4 : 1;
  const {
    font,
    space
  } = sizeTypes[size];
  return {
    fontSize: `${font}px`,
    padding: `${space * ratio}px ${space * 2 * px * ratio}px`,
    lineHeight: `${1.5 * font}px` // css`
    //   font-size: ${font}px;
    //   padding: ${space * ratio}px ${space * 2 * px * ratio}px;
    //   line-height: ${1.5 * font}px;
    // `

  };
}; // const appearanceTypes = {
//   success: '#11cc00',
//   danger: '#dd1010',
//   primary: '#45b1e5',
//   warning: '#ffe52b',
//   info: '#6bddef',
// }
// const btnAppearance = ({appearance = 'primary', outline, active, disabled}) => {
//   const color = appearanceTypes[appearance]
//   return css`
//     color: white;
//     background-color: ${color};
//     border: 1px solid ${color};
//     ${!disabled &&
//       css`
//         &:hover {
//           background-color: ${darken(color, 0.15)};
//         }
//       `};
//     ${outline &&
//       css`
//         background-color: white;
//         border: 1px solid ${color};
//         color: ${color};
//         &:hover {
//           color: white;
//         }
//       `};
//     ${active &&
//       css`
//         background-color: ${darken(color, 0.15)};
//         ${outline &&
//           css`
//             background-color: ${color};
//             color: white;
//           `}
//       `};
//     ${disabled &&
//       css`
//         cursor: not-allowed;
//         background-color: ${lighten(color, 0.3)};
//         border: 1px solid ${lighten(color, 0.3)};
//         ${outline &&
//           css`
//             cursor: not-allowed;
//             background-color: white;
//             color: ${lighten(color, 0.3)};
//             &:hover {
//               background-color: #fcfcfc;
//             }
//           `}
//       `};
//   `
// }


const fullRound = {
  borderRadius: 999
};

const btnRound = ({
  round
}) => round && fullRound; // const StyledButton = styled.button`
//   ${btn}
//   ${btnSize}
// `


const StyledButton$1 = _styled("button", {
  target: "e159xfo70",
  label: "StyledButton"
})(btn, btnBlock, btnSize, btnRound, colorStyles, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbkIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEpxQiIsImZpbGUiOiJCdXR0b25CLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQge2pzeCwga2V5ZnJhbWVzfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCB7Y3NzfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuXG5pbXBvcnQge0ZhU3Bpbm5lcn0gZnJvbSAncmVhY3QtaWNvbnMvZmEnXG5cbmltcG9ydCAqIGFzIFIgZnJvbSAncmFtZGEnXG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InXG5cbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5cbmltcG9ydCB7XG4gIC8vIGRhcmtlbixcbiAgaW5mZXJlQnV0dG9uQ29sb3JzLFxuICByZXNwb25zaXZlU3R5bGUsXG4gIGluZmVyZUludHJhU3BhY2luZ1NpemUsXG4gIGluZmVyZUZvbnRXZWlnaHQsXG4gIHByb3BzRm9yUHJlZml4LFxuICBpbmZlcmVGb250U2l6ZSxcbiAgaW5mZXJlUGFkZGluZ1NpemUsXG4gIGluZmVyZUJvcmRlclJhZGl1cyxcbiAgY29sb3JTdHlsZXMsXG4gIGRpc2FibGVkQ29sb3JTdHlsZXMsXG59IGZyb20gJ34vY29yZVVJL3V0aWxzL2luZmVyZVN0eWxlJ1xuXG5jb25zdCBkYXJrZW4gPSBSLmN1cnJ5KChjb2xvciwgcmF0aW8pID0+XG4gIENvbG9yKGNvbG9yKVxuICAgIC5kYXJrZW4ocmF0aW8pXG4gICAgLnRvU3RyaW5nKCksXG4pXG5jb25zdCBsaWdodGVuID0gUi5jdXJyeSgoY29sb3IsIHJhdGlvKSA9PlxuICBDb2xvcihjb2xvcilcbiAgICAubGlnaHRlbihyYXRpbylcbiAgICAudG9TdHJpbmcoKSxcbilcblxuY29uc3QgYnRuID0ge1xuICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgY29sb3I6ICdibGFjaycsXG4gIHBhZGRpbmc6ICcxMHB4IDIwcHgnLFxuICBib3JkZXJSYWRpdXM6ICc1cHgnLFxuICBib3hTaGFkb3c6ICdyZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KScsXG4gIHRyYW5zaXRpb246ICcwLjNzIGFsbCBlYXNlJyxcbiAgY3Vyc29yOiAncG9pbnRlcicsXG59XG5cbmNvbnN0IGZ1bGxXaWR0aCA9IHtcbiAgd2lkdGg6ICcxMDAlJyxcbn1cblxuY29uc3QgYnRuQmxvY2sgPSAoe2Jsb2NrfSkgPT4gYmxvY2sgJiYgZnVsbFdpZHRoXG5cbmNvbnN0IHNpemVUeXBlcyA9IHtcbiAgeHM6IHtcbiAgICBmb250OiAxMSxcbiAgICBzcGFjZTogNixcbiAgfSxcbiAgbWQ6IHtcbiAgICBmb250OiAxNCxcbiAgICBzcGFjZTogMTAsXG4gIH0sXG4gIGxnOiB7XG4gICAgZm9udDogMjQsXG4gICAgc3BhY2U6IDE4LFxuICB9LFxufVxuY29uc3QgYnRuU2l6ZSA9ICh7c2l6ZSA9ICdtZCcsIHB4ID0gMSwgdGlnaHR9KSA9PiB7XG4gIGNvbnN0IHJhdGlvID0gdGlnaHQgPyAwLjQgOiAxXG4gIGNvbnN0IHtmb250LCBzcGFjZX0gPSBzaXplVHlwZXNbc2l6ZV1cbiAgcmV0dXJuIHtcbiAgICBmb250U2l6ZTogYCR7Zm9udH1weGAsXG4gICAgcGFkZGluZzogYCR7c3BhY2UgKiByYXRpb31weCAke3NwYWNlICogMiAqIHB4ICogcmF0aW99cHhgLFxuICAgIGxpbmVIZWlnaHQ6IGAkezEuNSAqIGZvbnR9cHhgLFxuICB9XG4gIC8vIGNzc2BcbiAgLy8gICBmb250LXNpemU6ICR7Zm9udH1weDtcbiAgLy8gICBwYWRkaW5nOiAke3NwYWNlICogcmF0aW99cHggJHtzcGFjZSAqIDIgKiBweCAqIHJhdGlvfXB4O1xuICAvLyAgIGxpbmUtaGVpZ2h0OiAkezEuNSAqIGZvbnR9cHg7XG4gIC8vIGBcbn1cblxuLy8gY29uc3QgYXBwZWFyYW5jZVR5cGVzID0ge1xuLy8gICBzdWNjZXNzOiAnIzExY2MwMCcsXG4vLyAgIGRhbmdlcjogJyNkZDEwMTAnLFxuLy8gICBwcmltYXJ5OiAnIzQ1YjFlNScsXG4vLyAgIHdhcm5pbmc6ICcjZmZlNTJiJyxcbi8vICAgaW5mbzogJyM2YmRkZWYnLFxuLy8gfVxuXG4vLyBjb25zdCBidG5BcHBlYXJhbmNlID0gKHthcHBlYXJhbmNlID0gJ3ByaW1hcnknLCBvdXRsaW5lLCBhY3RpdmUsIGRpc2FibGVkfSkgPT4ge1xuLy8gICBjb25zdCBjb2xvciA9IGFwcGVhcmFuY2VUeXBlc1thcHBlYXJhbmNlXVxuLy8gICByZXR1cm4gY3NzYFxuLy8gICAgIGNvbG9yOiB3aGl0ZTtcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbi8vICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9yfTtcbi8vICAgICAkeyFkaXNhYmxlZCAmJlxuLy8gICAgICAgY3NzYFxuLy8gICAgICAgICAmOmhvdmVyIHtcbi8vICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rhcmtlbihjb2xvciwgMC4xNSl9O1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfTtcblxuLy8gICAgICR7b3V0bGluZSAmJlxuLy8gICAgICAgY3NzYFxuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbi8vICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtjb2xvcn07XG4vLyAgICAgICAgIGNvbG9yOiAke2NvbG9yfTtcbi8vICAgICAgICAgJjpob3ZlciB7XG4vLyAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfTtcblxuLy8gICAgICR7YWN0aXZlICYmXG4vLyAgICAgICBjc3NgXG4vLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGFya2VuKGNvbG9yLCAwLjE1KX07XG4vLyAgICAgICAgICR7b3V0bGluZSAmJlxuLy8gICAgICAgICAgIGNzc2Bcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuLy8gICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICAgIGB9XG4vLyAgICAgICBgfTtcblxuLy8gICAgICR7ZGlzYWJsZWQgJiZcbi8vICAgICAgIGNzc2Bcbi8vICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbi8vICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtsaWdodGVuKGNvbG9yLCAwLjMpfTtcbi8vICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtsaWdodGVuKGNvbG9yLCAwLjMpfTtcbi8vICAgICAgICAgJHtvdXRsaW5lICYmXG4vLyAgICAgICAgICAgY3NzYFxuLy8gICAgICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICAgICAgY29sb3I6ICR7bGlnaHRlbihjb2xvciwgMC4zKX07XG4vLyAgICAgICAgICAgICAmOmhvdmVyIHtcbi8vICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICBgfVxuLy8gICAgICAgYH07XG4vLyAgIGBcbi8vIH1cblxuY29uc3QgZnVsbFJvdW5kID0ge1xuICBib3JkZXJSYWRpdXM6IDk5OSxcbn1cblxuY29uc3QgYnRuUm91bmQgPSAoe3JvdW5kfSkgPT4gcm91bmQgJiYgZnVsbFJvdW5kXG5cbi8vIGNvbnN0IFN0eWxlZEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4vLyAgICR7YnRufVxuLy8gICAke2J0blNpemV9XG4vLyBgXG5cbmNvbnN0IFN0eWxlZEJ1dHRvbiA9IHN0eWxlZC5idXR0b24oXG4gIGJ0bixcbiAgYnRuQmxvY2ssXG4gIGJ0blNpemUsXG4gIGJ0blJvdW5kLFxuICBjb2xvclN0eWxlcyxcbilcblxuY29uc3QgT3ZlckNlbnRlclNwYW4gPSBzdHlsZWQuc3Bhbih7XG4gIG1hcmdpbjogMCxcbiAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIGxlZnQ6ICc1MCUnLFxuICB0b3A6ICc1MCUnLFxuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoLTUwJSwgLTUwJSknLFxufSlcblxuY29uc3Qgc3Bpbm5lckFuaW1hdGlvbiA9IGtleWZyYW1lcyh7XG4gICcxMDAlJzoge1xuICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgzNjBkZWcpJyxcbiAgfSxcbn0pXG5cbmZ1bmN0aW9uIEJ1dHRvbih7bG9hZGluZywgZGlzYWJsZWQgPSBsb2FkaW5nLCBjaGlsZHJlbiwgLi4ucmVzdFByb3BzfSkge1xuICByZXR1cm4gKFxuICAgIDxTdHlsZWRCdXR0b24gZGlzYWJsZWQ9e2Rpc2FibGVkfSB7Li4ucmVzdFByb3BzfT5cbiAgICAgIDxzcGFuIGNzcz17bG9hZGluZyAmJiB7dmlzaWJpbGl0eTogJ2hpZGRlbid9fT57Y2hpbGRyZW59PC9zcGFuPlxuICAgICAge2xvYWRpbmcgJiYgKFxuICAgICAgICA8T3ZlckNlbnRlclNwYW4+XG4gICAgICAgICAgPEZhU3Bpbm5lclxuICAgICAgICAgICAgY3NzPXt7YW5pbWF0aW9uOiBgJHtzcGlubmVyQW5pbWF0aW9ufSAxcyBsaW5lYXIgaW5maW5pdGVgfX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L092ZXJDZW50ZXJTcGFuPlxuICAgICAgKX1cbiAgICA8L1N0eWxlZEJ1dHRvbj5cbiAgKVxufVxuXG5CdXR0b24ucHJvcFR5cGVzID0ge1xuICBibG9jazogUHJvcFR5cGVzLmJvb2wsXG4gIHNpemU6IFByb3BUeXBlcy5zdHJpbmcsXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvblxuIl19 */");

const OverCenterSpan = _styled("span", {
  target: "e159xfo71",
  label: "OverCenterSpan"
})(process.env.NODE_ENV === "production" ? {
  name: "12kogl7",
  styles: "margin:0;display:block;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);"
} : {
  name: "12kogl7",
  styles: "margin:0;display:block;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbkIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0t1QiIsImZpbGUiOiJCdXR0b25CLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBqc3gganN4ICovXG5pbXBvcnQge2pzeCwga2V5ZnJhbWVzfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcbmltcG9ydCB7Y3NzfSBmcm9tICdAZW1vdGlvbi9jb3JlJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuXG5pbXBvcnQge0ZhU3Bpbm5lcn0gZnJvbSAncmVhY3QtaWNvbnMvZmEnXG5cbmltcG9ydCAqIGFzIFIgZnJvbSAncmFtZGEnXG5pbXBvcnQgQ29sb3IgZnJvbSAnY29sb3InXG5cbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5cbmltcG9ydCB7XG4gIC8vIGRhcmtlbixcbiAgaW5mZXJlQnV0dG9uQ29sb3JzLFxuICByZXNwb25zaXZlU3R5bGUsXG4gIGluZmVyZUludHJhU3BhY2luZ1NpemUsXG4gIGluZmVyZUZvbnRXZWlnaHQsXG4gIHByb3BzRm9yUHJlZml4LFxuICBpbmZlcmVGb250U2l6ZSxcbiAgaW5mZXJlUGFkZGluZ1NpemUsXG4gIGluZmVyZUJvcmRlclJhZGl1cyxcbiAgY29sb3JTdHlsZXMsXG4gIGRpc2FibGVkQ29sb3JTdHlsZXMsXG59IGZyb20gJ34vY29yZVVJL3V0aWxzL2luZmVyZVN0eWxlJ1xuXG5jb25zdCBkYXJrZW4gPSBSLmN1cnJ5KChjb2xvciwgcmF0aW8pID0+XG4gIENvbG9yKGNvbG9yKVxuICAgIC5kYXJrZW4ocmF0aW8pXG4gICAgLnRvU3RyaW5nKCksXG4pXG5jb25zdCBsaWdodGVuID0gUi5jdXJyeSgoY29sb3IsIHJhdGlvKSA9PlxuICBDb2xvcihjb2xvcilcbiAgICAubGlnaHRlbihyYXRpbylcbiAgICAudG9TdHJpbmcoKSxcbilcblxuY29uc3QgYnRuID0ge1xuICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgY29sb3I6ICdibGFjaycsXG4gIHBhZGRpbmc6ICcxMHB4IDIwcHgnLFxuICBib3JkZXJSYWRpdXM6ICc1cHgnLFxuICBib3hTaGFkb3c6ICdyZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KScsXG4gIHRyYW5zaXRpb246ICcwLjNzIGFsbCBlYXNlJyxcbiAgY3Vyc29yOiAncG9pbnRlcicsXG59XG5cbmNvbnN0IGZ1bGxXaWR0aCA9IHtcbiAgd2lkdGg6ICcxMDAlJyxcbn1cblxuY29uc3QgYnRuQmxvY2sgPSAoe2Jsb2NrfSkgPT4gYmxvY2sgJiYgZnVsbFdpZHRoXG5cbmNvbnN0IHNpemVUeXBlcyA9IHtcbiAgeHM6IHtcbiAgICBmb250OiAxMSxcbiAgICBzcGFjZTogNixcbiAgfSxcbiAgbWQ6IHtcbiAgICBmb250OiAxNCxcbiAgICBzcGFjZTogMTAsXG4gIH0sXG4gIGxnOiB7XG4gICAgZm9udDogMjQsXG4gICAgc3BhY2U6IDE4LFxuICB9LFxufVxuY29uc3QgYnRuU2l6ZSA9ICh7c2l6ZSA9ICdtZCcsIHB4ID0gMSwgdGlnaHR9KSA9PiB7XG4gIGNvbnN0IHJhdGlvID0gdGlnaHQgPyAwLjQgOiAxXG4gIGNvbnN0IHtmb250LCBzcGFjZX0gPSBzaXplVHlwZXNbc2l6ZV1cbiAgcmV0dXJuIHtcbiAgICBmb250U2l6ZTogYCR7Zm9udH1weGAsXG4gICAgcGFkZGluZzogYCR7c3BhY2UgKiByYXRpb31weCAke3NwYWNlICogMiAqIHB4ICogcmF0aW99cHhgLFxuICAgIGxpbmVIZWlnaHQ6IGAkezEuNSAqIGZvbnR9cHhgLFxuICB9XG4gIC8vIGNzc2BcbiAgLy8gICBmb250LXNpemU6ICR7Zm9udH1weDtcbiAgLy8gICBwYWRkaW5nOiAke3NwYWNlICogcmF0aW99cHggJHtzcGFjZSAqIDIgKiBweCAqIHJhdGlvfXB4O1xuICAvLyAgIGxpbmUtaGVpZ2h0OiAkezEuNSAqIGZvbnR9cHg7XG4gIC8vIGBcbn1cblxuLy8gY29uc3QgYXBwZWFyYW5jZVR5cGVzID0ge1xuLy8gICBzdWNjZXNzOiAnIzExY2MwMCcsXG4vLyAgIGRhbmdlcjogJyNkZDEwMTAnLFxuLy8gICBwcmltYXJ5OiAnIzQ1YjFlNScsXG4vLyAgIHdhcm5pbmc6ICcjZmZlNTJiJyxcbi8vICAgaW5mbzogJyM2YmRkZWYnLFxuLy8gfVxuXG4vLyBjb25zdCBidG5BcHBlYXJhbmNlID0gKHthcHBlYXJhbmNlID0gJ3ByaW1hcnknLCBvdXRsaW5lLCBhY3RpdmUsIGRpc2FibGVkfSkgPT4ge1xuLy8gICBjb25zdCBjb2xvciA9IGFwcGVhcmFuY2VUeXBlc1thcHBlYXJhbmNlXVxuLy8gICByZXR1cm4gY3NzYFxuLy8gICAgIGNvbG9yOiB3aGl0ZTtcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbi8vICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9yfTtcbi8vICAgICAkeyFkaXNhYmxlZCAmJlxuLy8gICAgICAgY3NzYFxuLy8gICAgICAgICAmOmhvdmVyIHtcbi8vICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rhcmtlbihjb2xvciwgMC4xNSl9O1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfTtcblxuLy8gICAgICR7b3V0bGluZSAmJlxuLy8gICAgICAgY3NzYFxuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbi8vICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtjb2xvcn07XG4vLyAgICAgICAgIGNvbG9yOiAke2NvbG9yfTtcbi8vICAgICAgICAgJjpob3ZlciB7XG4vLyAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICB9XG4vLyAgICAgICBgfTtcblxuLy8gICAgICR7YWN0aXZlICYmXG4vLyAgICAgICBjc3NgXG4vLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGFya2VuKGNvbG9yLCAwLjE1KX07XG4vLyAgICAgICAgICR7b3V0bGluZSAmJlxuLy8gICAgICAgICAgIGNzc2Bcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuLy8gICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICAgIGB9XG4vLyAgICAgICBgfTtcblxuLy8gICAgICR7ZGlzYWJsZWQgJiZcbi8vICAgICAgIGNzc2Bcbi8vICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbi8vICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtsaWdodGVuKGNvbG9yLCAwLjMpfTtcbi8vICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtsaWdodGVuKGNvbG9yLCAwLjMpfTtcbi8vICAgICAgICAgJHtvdXRsaW5lICYmXG4vLyAgICAgICAgICAgY3NzYFxuLy8gICAgICAgICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICAgICAgY29sb3I6ICR7bGlnaHRlbihjb2xvciwgMC4zKX07XG4vLyAgICAgICAgICAgICAmOmhvdmVyIHtcbi8vICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmNmYztcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgICBgfVxuLy8gICAgICAgYH07XG4vLyAgIGBcbi8vIH1cblxuY29uc3QgZnVsbFJvdW5kID0ge1xuICBib3JkZXJSYWRpdXM6IDk5OSxcbn1cblxuY29uc3QgYnRuUm91bmQgPSAoe3JvdW5kfSkgPT4gcm91bmQgJiYgZnVsbFJvdW5kXG5cbi8vIGNvbnN0IFN0eWxlZEJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG4vLyAgICR7YnRufVxuLy8gICAke2J0blNpemV9XG4vLyBgXG5cbmNvbnN0IFN0eWxlZEJ1dHRvbiA9IHN0eWxlZC5idXR0b24oXG4gIGJ0bixcbiAgYnRuQmxvY2ssXG4gIGJ0blNpemUsXG4gIGJ0blJvdW5kLFxuICBjb2xvclN0eWxlcyxcbilcblxuY29uc3QgT3ZlckNlbnRlclNwYW4gPSBzdHlsZWQuc3Bhbih7XG4gIG1hcmdpbjogMCxcbiAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIGxlZnQ6ICc1MCUnLFxuICB0b3A6ICc1MCUnLFxuICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoLTUwJSwgLTUwJSknLFxufSlcblxuY29uc3Qgc3Bpbm5lckFuaW1hdGlvbiA9IGtleWZyYW1lcyh7XG4gICcxMDAlJzoge1xuICAgIHRyYW5zZm9ybTogJ3JvdGF0ZSgzNjBkZWcpJyxcbiAgfSxcbn0pXG5cbmZ1bmN0aW9uIEJ1dHRvbih7bG9hZGluZywgZGlzYWJsZWQgPSBsb2FkaW5nLCBjaGlsZHJlbiwgLi4ucmVzdFByb3BzfSkge1xuICByZXR1cm4gKFxuICAgIDxTdHlsZWRCdXR0b24gZGlzYWJsZWQ9e2Rpc2FibGVkfSB7Li4ucmVzdFByb3BzfT5cbiAgICAgIDxzcGFuIGNzcz17bG9hZGluZyAmJiB7dmlzaWJpbGl0eTogJ2hpZGRlbid9fT57Y2hpbGRyZW59PC9zcGFuPlxuICAgICAge2xvYWRpbmcgJiYgKFxuICAgICAgICA8T3ZlckNlbnRlclNwYW4+XG4gICAgICAgICAgPEZhU3Bpbm5lclxuICAgICAgICAgICAgY3NzPXt7YW5pbWF0aW9uOiBgJHtzcGlubmVyQW5pbWF0aW9ufSAxcyBsaW5lYXIgaW5maW5pdGVgfX1cbiAgICAgICAgICAvPlxuICAgICAgICA8L092ZXJDZW50ZXJTcGFuPlxuICAgICAgKX1cbiAgICA8L1N0eWxlZEJ1dHRvbj5cbiAgKVxufVxuXG5CdXR0b24ucHJvcFR5cGVzID0ge1xuICBibG9jazogUHJvcFR5cGVzLmJvb2wsXG4gIHNpemU6IFByb3BUeXBlcy5zdHJpbmcsXG59XG5cbmV4cG9ydCBkZWZhdWx0IEJ1dHRvblxuIl19 */"
});

const spinnerAnimation = keyframes({
  '100%': {
    transform: 'rotate(360deg)'
  }
});

function Button$1({
  loading,
  disabled = loading,
  children,
  ...restProps
}) {
  return jsx(StyledButton$1, _extends({
    disabled: disabled
  }, restProps), jsx("span", {
    css: loading && {
      visibility: 'hidden'
    }
  }, children), loading && jsx(OverCenterSpan, null, jsx(FaSpinner, {
    css:
    /*#__PURE__*/
    css$1({
      animation: `${spinnerAnimation} 1s linear infinite`
    }, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJ1dHRvbkIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0xZIiwiZmlsZSI6IkJ1dHRvbkIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzeCBqc3ggKi9cbmltcG9ydCB7anN4LCBrZXlmcmFtZXN9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5cbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xuaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5cbmltcG9ydCB7RmFTcGlubmVyfSBmcm9tICdyZWFjdC1pY29ucy9mYSdcblxuaW1wb3J0ICogYXMgUiBmcm9tICdyYW1kYSdcbmltcG9ydCBDb2xvciBmcm9tICdjb2xvcidcblxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcblxuaW1wb3J0IHtcbiAgLy8gZGFya2VuLFxuICBpbmZlcmVCdXR0b25Db2xvcnMsXG4gIHJlc3BvbnNpdmVTdHlsZSxcbiAgaW5mZXJlSW50cmFTcGFjaW5nU2l6ZSxcbiAgaW5mZXJlRm9udFdlaWdodCxcbiAgcHJvcHNGb3JQcmVmaXgsXG4gIGluZmVyZUZvbnRTaXplLFxuICBpbmZlcmVQYWRkaW5nU2l6ZSxcbiAgaW5mZXJlQm9yZGVyUmFkaXVzLFxuICBjb2xvclN0eWxlcyxcbiAgZGlzYWJsZWRDb2xvclN0eWxlcyxcbn0gZnJvbSAnfi9jb3JlVUkvdXRpbHMvaW5mZXJlU3R5bGUnXG5cbmNvbnN0IGRhcmtlbiA9IFIuY3VycnkoKGNvbG9yLCByYXRpbykgPT5cbiAgQ29sb3IoY29sb3IpXG4gICAgLmRhcmtlbihyYXRpbylcbiAgICAudG9TdHJpbmcoKSxcbilcbmNvbnN0IGxpZ2h0ZW4gPSBSLmN1cnJ5KChjb2xvciwgcmF0aW8pID0+XG4gIENvbG9yKGNvbG9yKVxuICAgIC5saWdodGVuKHJhdGlvKVxuICAgIC50b1N0cmluZygpLFxuKVxuXG5jb25zdCBidG4gPSB7XG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICBjb2xvcjogJ2JsYWNrJyxcbiAgcGFkZGluZzogJzEwcHggMjBweCcsXG4gIGJvcmRlclJhZGl1czogJzVweCcsXG4gIGJveFNoYWRvdzogJ3JnYmEoMCwgMCwgMCwgMC4xMiksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMjQpJyxcbiAgdHJhbnNpdGlvbjogJzAuM3MgYWxsIGVhc2UnLFxuICBjdXJzb3I6ICdwb2ludGVyJyxcbn1cblxuY29uc3QgZnVsbFdpZHRoID0ge1xuICB3aWR0aDogJzEwMCUnLFxufVxuXG5jb25zdCBidG5CbG9jayA9ICh7YmxvY2t9KSA9PiBibG9jayAmJiBmdWxsV2lkdGhcblxuY29uc3Qgc2l6ZVR5cGVzID0ge1xuICB4czoge1xuICAgIGZvbnQ6IDExLFxuICAgIHNwYWNlOiA2LFxuICB9LFxuICBtZDoge1xuICAgIGZvbnQ6IDE0LFxuICAgIHNwYWNlOiAxMCxcbiAgfSxcbiAgbGc6IHtcbiAgICBmb250OiAyNCxcbiAgICBzcGFjZTogMTgsXG4gIH0sXG59XG5jb25zdCBidG5TaXplID0gKHtzaXplID0gJ21kJywgcHggPSAxLCB0aWdodH0pID0+IHtcbiAgY29uc3QgcmF0aW8gPSB0aWdodCA/IDAuNCA6IDFcbiAgY29uc3Qge2ZvbnQsIHNwYWNlfSA9IHNpemVUeXBlc1tzaXplXVxuICByZXR1cm4ge1xuICAgIGZvbnRTaXplOiBgJHtmb250fXB4YCxcbiAgICBwYWRkaW5nOiBgJHtzcGFjZSAqIHJhdGlvfXB4ICR7c3BhY2UgKiAyICogcHggKiByYXRpb31weGAsXG4gICAgbGluZUhlaWdodDogYCR7MS41ICogZm9udH1weGAsXG4gIH1cbiAgLy8gY3NzYFxuICAvLyAgIGZvbnQtc2l6ZTogJHtmb250fXB4O1xuICAvLyAgIHBhZGRpbmc6ICR7c3BhY2UgKiByYXRpb31weCAke3NwYWNlICogMiAqIHB4ICogcmF0aW99cHg7XG4gIC8vICAgbGluZS1oZWlnaHQ6ICR7MS41ICogZm9udH1weDtcbiAgLy8gYFxufVxuXG4vLyBjb25zdCBhcHBlYXJhbmNlVHlwZXMgPSB7XG4vLyAgIHN1Y2Nlc3M6ICcjMTFjYzAwJyxcbi8vICAgZGFuZ2VyOiAnI2RkMTAxMCcsXG4vLyAgIHByaW1hcnk6ICcjNDViMWU1Jyxcbi8vICAgd2FybmluZzogJyNmZmU1MmInLFxuLy8gICBpbmZvOiAnIzZiZGRlZicsXG4vLyB9XG5cbi8vIGNvbnN0IGJ0bkFwcGVhcmFuY2UgPSAoe2FwcGVhcmFuY2UgPSAncHJpbWFyeScsIG91dGxpbmUsIGFjdGl2ZSwgZGlzYWJsZWR9KSA9PiB7XG4vLyAgIGNvbnN0IGNvbG9yID0gYXBwZWFyYW5jZVR5cGVzW2FwcGVhcmFuY2VdXG4vLyAgIHJldHVybiBjc3NgXG4vLyAgICAgY29sb3I6IHdoaXRlO1xuLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuLy8gICAgIGJvcmRlcjogMXB4IHNvbGlkICR7Y29sb3J9O1xuLy8gICAgICR7IWRpc2FibGVkICYmXG4vLyAgICAgICBjc3NgXG4vLyAgICAgICAgICY6aG92ZXIge1xuLy8gICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGFya2VuKGNvbG9yLCAwLjE1KX07XG4vLyAgICAgICAgIH1cbi8vICAgICAgIGB9O1xuXG4vLyAgICAgJHtvdXRsaW5lICYmXG4vLyAgICAgICBjc3NgXG4vLyAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuLy8gICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2NvbG9yfTtcbi8vICAgICAgICAgY29sb3I6ICR7Y29sb3J9O1xuLy8gICAgICAgICAmOmhvdmVyIHtcbi8vICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4vLyAgICAgICAgIH1cbi8vICAgICAgIGB9O1xuXG4vLyAgICAgJHthY3RpdmUgJiZcbi8vICAgICAgIGNzc2Bcbi8vICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkYXJrZW4oY29sb3IsIDAuMTUpfTtcbi8vICAgICAgICAgJHtvdXRsaW5lICYmXG4vLyAgICAgICAgICAgY3NzYFxuLy8gICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4vLyAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4vLyAgICAgICAgICAgYH1cbi8vICAgICAgIGB9O1xuXG4vLyAgICAgJHtkaXNhYmxlZCAmJlxuLy8gICAgICAgY3NzYFxuLy8gICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuLy8gICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2xpZ2h0ZW4oY29sb3IsIDAuMyl9O1xuLy8gICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2xpZ2h0ZW4oY29sb3IsIDAuMyl9O1xuLy8gICAgICAgICAke291dGxpbmUgJiZcbi8vICAgICAgICAgICBjc3NgXG4vLyAgICAgICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuLy8gICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4vLyAgICAgICAgICAgICBjb2xvcjogJHtsaWdodGVuKGNvbG9yLCAwLjMpfTtcbi8vICAgICAgICAgICAgICY6aG92ZXIge1xuLy8gICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNmY2ZjO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICAgIGB9XG4vLyAgICAgICBgfTtcbi8vICAgYFxuLy8gfVxuXG5jb25zdCBmdWxsUm91bmQgPSB7XG4gIGJvcmRlclJhZGl1czogOTk5LFxufVxuXG5jb25zdCBidG5Sb3VuZCA9ICh7cm91bmR9KSA9PiByb3VuZCAmJiBmdWxsUm91bmRcblxuLy8gY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbi8vICAgJHtidG59XG4vLyAgICR7YnRuU2l6ZX1cbi8vIGBcblxuY29uc3QgU3R5bGVkQnV0dG9uID0gc3R5bGVkLmJ1dHRvbihcbiAgYnRuLFxuICBidG5CbG9jayxcbiAgYnRuU2l6ZSxcbiAgYnRuUm91bmQsXG4gIGNvbG9yU3R5bGVzLFxuKVxuXG5jb25zdCBPdmVyQ2VudGVyU3BhbiA9IHN0eWxlZC5zcGFuKHtcbiAgbWFyZ2luOiAwLFxuICBkaXNwbGF5OiAnYmxvY2snLFxuICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgbGVmdDogJzUwJScsXG4gIHRvcDogJzUwJScsXG4gIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKScsXG59KVxuXG5jb25zdCBzcGlubmVyQW5pbWF0aW9uID0ga2V5ZnJhbWVzKHtcbiAgJzEwMCUnOiB7XG4gICAgdHJhbnNmb3JtOiAncm90YXRlKDM2MGRlZyknLFxuICB9LFxufSlcblxuZnVuY3Rpb24gQnV0dG9uKHtsb2FkaW5nLCBkaXNhYmxlZCA9IGxvYWRpbmcsIGNoaWxkcmVuLCAuLi5yZXN0UHJvcHN9KSB7XG4gIHJldHVybiAoXG4gICAgPFN0eWxlZEJ1dHRvbiBkaXNhYmxlZD17ZGlzYWJsZWR9IHsuLi5yZXN0UHJvcHN9PlxuICAgICAgPHNwYW4gY3NzPXtsb2FkaW5nICYmIHt2aXNpYmlsaXR5OiAnaGlkZGVuJ319PntjaGlsZHJlbn08L3NwYW4+XG4gICAgICB7bG9hZGluZyAmJiAoXG4gICAgICAgIDxPdmVyQ2VudGVyU3Bhbj5cbiAgICAgICAgICA8RmFTcGlubmVyXG4gICAgICAgICAgICBjc3M9e3thbmltYXRpb246IGAke3NwaW5uZXJBbmltYXRpb259IDFzIGxpbmVhciBpbmZpbml0ZWB9fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvT3ZlckNlbnRlclNwYW4+XG4gICAgICApfVxuICAgIDwvU3R5bGVkQnV0dG9uPlxuICApXG59XG5cbkJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGJsb2NrOiBQcm9wVHlwZXMuYm9vbCxcbiAgc2l6ZTogUHJvcFR5cGVzLnN0cmluZyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uXG4iXX0= */")
  })));
}

Button$1.propTypes = {
  block: PropTypes.bool,
  size: PropTypes.string
};

export { Button, Checkbox as CheckBox, Button$1 as ButtonB, Label, XXLargeLabel, XLargeLabel, LargeLabel, MediumLabel, SmallLabel, XSmallLabel, ErrorLabel, Header, LinearLayout, Column, Row, Box };
